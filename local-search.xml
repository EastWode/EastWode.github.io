<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Python 绘图常用参数和方法</title>
    <link href="/2022/12/06/Python%20%E7%BB%98%E5%9B%BE%E5%B8%B8%E7%94%A8%E7%9A%84%E5%8F%82%E6%95%B0%E5%92%8C%E6%96%B9%E6%B3%95/"/>
    <url>/2022/12/06/Python%20%E7%BB%98%E5%9B%BE%E5%B8%B8%E7%94%A8%E7%9A%84%E5%8F%82%E6%95%B0%E5%92%8C%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>本文整理利用python绘图过程中常用的调整图像参数的方法</p><span id="more"></span><h3 id="Ipython编译器内嵌绘图，可以省略掉plt-show">Ipython编译器内嵌绘图，可以省略掉plt.show()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">%matplotlib inline   <br></code></pre></td></tr></table></figure><h3 id="设定显示图片的格式">设定显示图片的格式</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">%config InlineBackend.figure_format = <span class="hljs-string">&quot;png&quot;</span><br>%config InlineBackend.figure_format = <span class="hljs-string">&quot;svg&quot;</span><br>%config InlineBackend.figure_format = <span class="hljs-string">&quot;retina&quot;</span><br></code></pre></td></tr></table></figure><h3 id="导入相关库">导入相关库</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> seaborn <span class="hljs-keyword">as</span> sns<br></code></pre></td></tr></table></figure><h3 id="图形默认属性控制">图形默认属性控制</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python">plt.rcParams[<span class="hljs-string">&#x27;font.sans-serif&#x27;</span>] = [<span class="hljs-string">&#x27;SimHei&#x27;</span>]     <span class="hljs-comment"># 字体样式 </span><br>plt.rcParams[<span class="hljs-string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="hljs-literal">False</span>       <span class="hljs-comment"># 字符显示</span><br>plt.rcParams[<span class="hljs-string">&#x27;lines.linestyle&#x27;</span>] = <span class="hljs-string">&#x27;-.&#x27;</span>           <span class="hljs-comment"># 线条样式</span><br>plt.rcParams[<span class="hljs-string">&#x27;lines.linewidth&#x27;</span>] = <span class="hljs-number">3</span>              <span class="hljs-comment"># 线条宽度</span><br>plt.rcParams[<span class="hljs-string">&#x27;lines.color&#x27;</span>] = <span class="hljs-string">&#x27;blue&#x27;</span>             <span class="hljs-comment"># 线条颜色</span><br>plt.rcParams[<span class="hljs-string">&#x27;lines.marker&#x27;</span>] = <span class="hljs-string">&#x27;o&#x27;</span>               <span class="hljs-comment"># 标记样式</span><br>plt.rcParams[<span class="hljs-string">&#x27;lines.markersize&#x27;</span>] = <span class="hljs-number">6</span>             <span class="hljs-comment"># 标记大小</span><br>plt.rcParams[<span class="hljs-string">&#x27;lines.markeredgewidth&#x27;</span>] = <span class="hljs-number">0.5</span>      <span class="hljs-comment"># 标记附近的线宽</span><br>plt.rcParams[<span class="hljs-string">&#x27;xtick.labelsize&#x27;</span>] = <span class="hljs-number">8</span>              <span class="hljs-comment"># 横轴字体大小</span><br>plt.rcParams[<span class="hljs-string">&#x27;ytick.labelsize&#x27;</span>] = <span class="hljs-number">8</span>                 <span class="hljs-comment"># 纵轴字体大小</span><br>plt.rcParams[<span class="hljs-string">&#x27;xtick.major.size&#x27;</span>]                 <span class="hljs-comment"># x轴最大刻度</span><br>plt.rcParams[<span class="hljs-string">&#x27;ytick.major.size&#x27;</span>]                 <span class="hljs-comment"># y轴最大刻度</span><br>plt.rcParams[<span class="hljs-string">&#x27;axes.titlesize&#x27;</span>]                   <span class="hljs-comment"># 子图的标题大小</span><br>plt.rcParams[<span class="hljs-string">&#x27;axes.labelsize&#x27;</span>]                   <span class="hljs-comment"># 子图的标签大小</span><br>plt.rcParams[<span class="hljs-string">&#x27;figure.dpi&#x27;</span>]                       <span class="hljs-comment"># 图像分辨率</span><br>plt.rcParams[<span class="hljs-string">&#x27;figure.figsize&#x27;</span>]                   <span class="hljs-comment"># 图像显示大小</span><br>plt.rcParams[<span class="hljs-string">&#x27;savefig.dpi&#x27;</span>]                      <span class="hljs-comment"># 图片像素</span><br></code></pre></td></tr></table></figure><h3 id="子图绘制">子图绘制</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python">fig, ax = plt.subplots(nrows=<span class="hljs-number">2</span>,ncols=<span class="hljs-number">2</span>,figsize=(<span class="hljs-number">8</span>,<span class="hljs-number">6</span>))    <span class="hljs-comment"># 2行2列共两个子图，画布尺寸8×6</span><br>ax1 = ax[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]    <span class="hljs-comment"># 第0行第0列为子图1</span><br>ax2 = ax[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]    <span class="hljs-comment"># 第0行第1列为子图2</span><br>ax3 = ax[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>]    <span class="hljs-comment"># 第1行第0列为子图3</span><br>ax4 = ax[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>]    <span class="hljs-comment"># 第1行第1列为子图4</span><br><br><span class="hljs-comment"># 设置图像的标题</span><br>ax1.set_title(<span class="hljs-string">&quot;图1&quot;</span>,fontdict=&#123;<span class="hljs-string">&#x27;fontsize&#x27;</span>:<span class="hljs-number">12</span>&#125;)<br>ax2.set_title(<span class="hljs-string">&quot;图2&quot;</span>,fontdict=&#123;<span class="hljs-string">&#x27;fontsize&#x27;</span>:<span class="hljs-number">12</span>&#125;)<br>ax3.set_title(<span class="hljs-string">&quot;图3&quot;</span>,fontdict=&#123;<span class="hljs-string">&#x27;fontsize&#x27;</span>:<span class="hljs-number">12</span>&#125;)<br>ax4.set_title(<span class="hljs-string">&quot;图4&quot;</span>,fontdict=&#123;<span class="hljs-string">&#x27;fontsize&#x27;</span>:<span class="hljs-number">12</span>&#125;)<br><br><span class="hljs-comment"># 设置图像横轴和纵轴的标签</span><br>ax1.set_xlabel(<span class="hljs-string">&quot;横轴标签1&quot;</span>,fontdict=&#123;<span class="hljs-string">&#x27;fontsize&#x27;</span>:<span class="hljs-number">10</span>&#125;)<br>ax3.set_xlabel(<span class="hljs-string">&quot;横轴标签3&quot;</span>,fontdict=&#123;<span class="hljs-string">&#x27;fontsize&#x27;</span>:<span class="hljs-number">10</span>&#125;)<br>ax4.set_xlabel(<span class="hljs-string">&quot;横轴标签4&quot;</span>,fontdict=&#123;<span class="hljs-string">&#x27;fontsize&#x27;</span>:<span class="hljs-number">10</span>&#125;)<br>ax1.set_ylabel(<span class="hljs-string">&quot;纵轴标签1&quot;</span>,fontdict=&#123;<span class="hljs-string">&#x27;fontsize&#x27;</span>:<span class="hljs-number">10</span>&#125;)<br>ax3.set_ylabel(<span class="hljs-string">&quot;纵轴标签3&quot;</span>,fontdict=&#123;<span class="hljs-string">&#x27;fontsize&#x27;</span>:<span class="hljs-number">10</span>&#125;)<br><br><span class="hljs-comment"># 隐藏图3的右边线和上边线</span><br>ax3.spines[[<span class="hljs-string">&#x27;right&#x27;</span>,<span class="hljs-string">&#x27;top&#x27;</span>]].set_visible(<span class="hljs-literal">False</span>) <br><br><span class="hljs-comment"># 隐藏图4的右边线和上边线并且隐藏图4纵轴刻度尺和刻度值</span><br>ax4.spines[[<span class="hljs-string">&#x27;left&#x27;</span>,<span class="hljs-string">&#x27;right&#x27;</span>,<span class="hljs-string">&#x27;top&#x27;</span>]].set_visible(<span class="hljs-literal">False</span>)   <br>ax4.tick_params(left=<span class="hljs-literal">False</span>,labelleft=<span class="hljs-literal">False</span>)            <br><br><span class="hljs-comment"># 自动排版防止堆叠</span><br>plt.tight_layout() <br></code></pre></td></tr></table></figure><p><img src="/img/%E7%BB%98%E5%9B%BE%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/output_9_0.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python">fig = plt.figure(figsize=(<span class="hljs-number">6</span>, <span class="hljs-number">6</span>))<br>grid = plt.GridSpec(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, wspace=<span class="hljs-number">0.3</span>, hspace=<span class="hljs-number">0.5</span>, figure=<span class="hljs-literal">True</span>)<br>ax1 = fig.add_subplot(grid[<span class="hljs-number">0</span>, <span class="hljs-number">0</span>:])<br>ax2 = fig.add_subplot(grid[<span class="hljs-number">1</span>, <span class="hljs-number">0</span>])<br>ax3 = fig.add_subplot(grid[<span class="hljs-number">1</span>, <span class="hljs-number">1</span>])<br><br>ax1.set_title(<span class="hljs-string">&quot;图1&quot;</span>,fontdict=&#123;<span class="hljs-string">&#x27;fontsize&#x27;</span>:<span class="hljs-number">12</span>&#125;)<br>ax2.set_title(<span class="hljs-string">&quot;图2&quot;</span>,fontdict=&#123;<span class="hljs-string">&#x27;fontsize&#x27;</span>:<span class="hljs-number">12</span>&#125;)<br>ax3.set_title(<span class="hljs-string">&quot;图3&quot;</span>,fontdict=&#123;<span class="hljs-string">&#x27;fontsize&#x27;</span>:<span class="hljs-number">12</span>&#125;)<br>ax1.set_xlabel(<span class="hljs-string">&quot;横轴标签1&quot;</span>,fontdict=&#123;<span class="hljs-string">&#x27;fontsize&#x27;</span>:<span class="hljs-number">10</span>&#125;)<br>ax2.set_xlabel(<span class="hljs-string">&quot;横轴标签2&quot;</span>,fontdict=&#123;<span class="hljs-string">&#x27;fontsize&#x27;</span>:<span class="hljs-number">10</span>&#125;)<br>ax3.set_xlabel(<span class="hljs-string">&quot;横轴标签3&quot;</span>,fontdict=&#123;<span class="hljs-string">&#x27;fontsize&#x27;</span>:<span class="hljs-number">10</span>&#125;)<br>ax1.set_ylabel(<span class="hljs-string">&quot;纵轴标签1&quot;</span>,fontdict=&#123;<span class="hljs-string">&#x27;fontsize&#x27;</span>:<span class="hljs-number">10</span>&#125;)<br>ax2.set_ylabel(<span class="hljs-string">&quot;纵轴标签2&quot;</span>,fontdict=&#123;<span class="hljs-string">&#x27;fontsize&#x27;</span>:<span class="hljs-number">10</span>&#125;)<br><br>ax2.spines[[<span class="hljs-string">&#x27;right&#x27;</span>,<span class="hljs-string">&#x27;top&#x27;</span>]].set_visible(<span class="hljs-literal">False</span>) <br>ax3.spines[[<span class="hljs-string">&#x27;left&#x27;</span>,<span class="hljs-string">&#x27;right&#x27;</span>,<span class="hljs-string">&#x27;top&#x27;</span>]].set_visible(<span class="hljs-literal">False</span>)   <br>ax3.tick_params(left=<span class="hljs-literal">False</span>,labelleft=<span class="hljs-literal">True</span>) <br><br><span class="hljs-comment"># 保存图像</span><br>plt.savefig(<span class="hljs-string">&#x27;图像文件名.png&#x27;</span>, dpi=<span class="hljs-number">300</span>, bbox_inches=<span class="hljs-string">&#x27;tight&#x27;</span>)<br></code></pre></td></tr></table></figure><p><img src="/img/%E7%BB%98%E5%9B%BE%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/output_10_0.png" alt=""></p>]]></content>
    
    
    <categories>
      
      <category>编程语言</category>
      
      <category>Python</category>
      
      <category>绘图</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>绘图</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据分析与可视化</title>
    <link href="/2022/11/24/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    <url>/2022/11/24/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<p>本文展示了利用Python和kaggle数据集完成数据分析的主要流程和方法，更多信息请前往 <a href="https://www.kaggle.com/code/woodeast/logit/notebook">数据可视化与Logit回归分析</a> 获取。</p><span id="more"></span><h1 id="一-数据读取"><a class="markdownIt-Anchor" href="#一-数据读取"></a> 一、数据读取</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd   <span class="hljs-comment">#导入pandas库</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 从Excel中读取数据</span><br>dataset = pd.read_excel(<span class="hljs-string">&quot;Breast_Cancer.xlsx&quot;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">dataset.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Age</th>      <th>Race</th>      <th>Marital Status</th>      <th>T Stage</th>      <th>N Stage</th>      <th>6th Stage</th>      <th>differentiate</th>      <th>Grade</th>      <th>A Stage</th>      <th>Tumor Size</th>      <th>Estrogen Status</th>      <th>Progesterone Status</th>      <th>Regional Node Examined</th>      <th>Reginol Node Positive</th>      <th>Survival Months</th>      <th>Status</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>68</td>      <td>White</td>      <td>Married</td>      <td>T1</td>      <td>N1</td>      <td>IIA</td>      <td>Poorly differentiated</td>      <td>3</td>      <td>Regional</td>      <td>4</td>      <td>Positive</td>      <td>Positive</td>      <td>24</td>      <td>1</td>      <td>60</td>      <td>Alive</td>    </tr>    <tr>      <th>1</th>      <td>50</td>      <td>White</td>      <td>Married</td>      <td>T2</td>      <td>N2</td>      <td>IIIA</td>      <td>Moderately differentiated</td>      <td>2</td>      <td>Regional</td>      <td>35</td>      <td>Positive</td>      <td>Positive</td>      <td>14</td>      <td>5</td>      <td>62</td>      <td>Alive</td>    </tr>    <tr>      <th>2</th>      <td>58</td>      <td>White</td>      <td>Divorced</td>      <td>T3</td>      <td>N3</td>      <td>IIIC</td>      <td>Moderately differentiated</td>      <td>2</td>      <td>Regional</td>      <td>63</td>      <td>Positive</td>      <td>Positive</td>      <td>14</td>      <td>7</td>      <td>75</td>      <td>Alive</td>    </tr>    <tr>      <th>3</th>      <td>58</td>      <td>White</td>      <td>Married</td>      <td>T1</td>      <td>N1</td>      <td>IIA</td>      <td>Poorly differentiated</td>      <td>3</td>      <td>Regional</td>      <td>18</td>      <td>Positive</td>      <td>Positive</td>      <td>2</td>      <td>1</td>      <td>84</td>      <td>Alive</td>    </tr>    <tr>      <th>4</th>      <td>47</td>      <td>White</td>      <td>Married</td>      <td>T2</td>      <td>N1</td>      <td>IIB</td>      <td>Poorly differentiated</td>      <td>3</td>      <td>Regional</td>      <td>41</td>      <td>Positive</td>      <td>Positive</td>      <td>3</td>      <td>1</td>      <td>50</td>      <td>Alive</td>    </tr>  </tbody></table></div><h4 id="特征描述"><a class="markdownIt-Anchor" href="#特征描述"></a> 特征描述</h4><table><thead><tr><th style="text-align:left">特征</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">Age</td><td style="text-align:left">年龄</td></tr><tr><td style="text-align:left">Race</td><td style="text-align:left">种族：白人，黑人，其他（美洲印第安人/阿拉斯加土著、亚洲/太平洋岛民）</td></tr><tr><td style="text-align:left">Marital Status</td><td style="text-align:left">婚姻状况：已婚，单身，离婚，分居，丧偶</td></tr><tr><td style="text-align:left">T Stage</td><td style="text-align:left">T分期：肿瘤直径为依据</td></tr><tr><td style="text-align:left">N Stage</td><td style="text-align:left">N分期：局部淋巴结转移情况为依据</td></tr><tr><td style="text-align:left">6th Stage</td><td style="text-align:left">AJCC第六版分期：原位癌、肿瘤大小、局部淋巴结转移和器官转移等为依据</td></tr><tr><td style="text-align:left">differentiate</td><td style="text-align:left">分化程度: 未分化，低分化，中等分化，高分化</td></tr><tr><td style="text-align:left">Grade</td><td style="text-align:left">等级：高等级意味着癌症增长更快，更容易扩散</td></tr><tr><td style="text-align:left">A Stage</td><td style="text-align:left">A分期： 局部（未转移），远处（转移）</td></tr><tr><td style="text-align:left">Tumor Size</td><td style="text-align:left">肿瘤大小</td></tr><tr><td style="text-align:left">Estrogen Status</td><td style="text-align:left">雌激素状态：ER阳性乳腺癌</td></tr><tr><td style="text-align:left">Progesterone Status</td><td style="text-align:left">孕激素状态：PR阳性乳腺癌</td></tr><tr><td style="text-align:left">Regional Node Examined</td><td style="text-align:left">检查的区域节点：记录病理检查的局部淋巴结总数</td></tr><tr><td style="text-align:left">Regional Node Positive</td><td style="text-align:left">区域节点阳性数：记录检查局部阳性淋巴结的数量</td></tr><tr><td style="text-align:left">Survival Months</td><td style="text-align:left">生存时间（月）</td></tr><tr><td style="text-align:left">Status</td><td style="text-align:left">结局状态：存活，死亡</td></tr></tbody></table><h1 id="二-查看数据详细信息"><a class="markdownIt-Anchor" href="#二-查看数据详细信息"></a> 二、查看数据详细信息</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">dataset.info() <span class="hljs-comment"># 数据整体信息</span><br></code></pre></td></tr></table></figure><pre><code class="hljs">&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 4024 entries, 0 to 4023Data columns (total 16 columns): #   Column                  Non-Null Count  Dtype ---  ------                  --------------  -----  0   Age                     4024 non-null   int64  1   Race                    4024 non-null   object 2   Marital Status          4024 non-null   object 3   T Stage                 4024 non-null   object 4   N Stage                 4024 non-null   object 5   6th Stage               4024 non-null   object 6   differentiate           4024 non-null   object 7   Grade                   4024 non-null   object 8   A Stage                 4024 non-null   object 9   Tumor Size              4024 non-null   int64  10  Estrogen Status         4024 non-null   object 11  Progesterone Status     4024 non-null   object 12  Regional Node Examined  4024 non-null   int64  13  Reginol Node Positive   4024 non-null   int64  14  Survival Months         4024 non-null   int64  15  Status                  4024 non-null   objectdtypes: int64(5), object(11)memory usage: 503.1+ KB</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">dataset.nunique()   <span class="hljs-comment"># 查看各列的不同值的数量</span><br></code></pre></td></tr></table></figure><pre><code class="hljs">Age                        40Race                        3Marital Status              5T Stage                     4N Stage                     36th Stage                   5differentiate               4Grade                       4A Stage                     2Tumor Size                110Estrogen Status             2Progesterone Status         2Regional Node Examined     54Reginol Node Positive      38Survival Months           107Status                      2dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">dataset[<span class="hljs-string">&#x27;Status&#x27;</span>].value_counts() <span class="hljs-comment"># 查看列的取值</span><br></code></pre></td></tr></table></figure><pre><code class="hljs">Alive    3408Dead      616Name: Status, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">dataset.describe() <span class="hljs-comment"># 定量资料的统计描述</span><br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Age</th>      <th>Tumor Size</th>      <th>Regional Node Examined</th>      <th>Reginol Node Positive</th>      <th>Survival Months</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>4024.000000</td>      <td>4024.000000</td>      <td>4024.000000</td>      <td>4024.000000</td>      <td>4024.000000</td>    </tr>    <tr>      <th>mean</th>      <td>53.972167</td>      <td>30.473658</td>      <td>14.357107</td>      <td>4.158052</td>      <td>71.297962</td>    </tr>    <tr>      <th>std</th>      <td>8.963134</td>      <td>21.119696</td>      <td>8.099675</td>      <td>5.109331</td>      <td>22.921430</td>    </tr>    <tr>      <th>min</th>      <td>30.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>    </tr>    <tr>      <th>25%</th>      <td>47.000000</td>      <td>16.000000</td>      <td>9.000000</td>      <td>1.000000</td>      <td>56.000000</td>    </tr>    <tr>      <th>50%</th>      <td>54.000000</td>      <td>25.000000</td>      <td>14.000000</td>      <td>2.000000</td>      <td>73.000000</td>    </tr>    <tr>      <th>75%</th>      <td>61.000000</td>      <td>38.000000</td>      <td>19.000000</td>      <td>5.000000</td>      <td>90.000000</td>    </tr>    <tr>      <th>max</th>      <td>69.000000</td>      <td>140.000000</td>      <td>61.000000</td>      <td>46.000000</td>      <td>107.000000</td>    </tr>  </tbody></table></div><h1 id="三-数据可视化探索"><a class="markdownIt-Anchor" href="#三-数据可视化探索"></a> 三、数据可视化探索</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> seaborn <span class="hljs-keyword">as</span> sns<br><br><span class="hljs-comment"># %matplotlib inline   </span><br><span class="hljs-comment"># %config InlineBackend.figure_format = &#x27;retina&#x27; </span><br><span class="hljs-comment"># plt.rcParams[&#x27;font.sans-serif&#x27;] = [&#x27;FangSong&#x27;]    # 指定字体，比如FangSong(仿宋)</span><br><span class="hljs-comment"># plt.rcParams[&#x27;axes.unicode_minus&#x27;] = False    # 正常显示符号（-）</span><br></code></pre></td></tr></table></figure><h3 id="绘图基础"><a class="markdownIt-Anchor" href="#绘图基础"></a> 绘图基础</h3><ul><li>画布，坐标系: fig, ax = plt.subplots(nrows, ncols, figsize=(m,n))</li><li>直条图: sns.countplot(data, x, y, hue, ax)</li><li>直方图: sns.histplot(data, x, y, bins, kde, hue, ax)</li><li>散点图: sns.scatterplot(data, x, y, hue, ax)</li><li>箱线图: sns.boxplot(data, x, y, ax)</li><li>热图: sns.heatmap(data, cmap, annot, ax)</li><li>自定义图标题: ax.set_title(label, fontsize)</li><li>自定义横轴名: ax.set_xlabel(label, fontsize)</li><li>自定义纵轴名: ax.set_ylabel(label, fontsize)</li><li>保存图片: plt.savefig(filename, dpi=300, bbox_inches=‘tight’)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">fig1, ax1 = plt.subplots(figsize=(<span class="hljs-number">6</span>,<span class="hljs-number">4</span>))<br>sns.scatterplot(data=dataset, x=<span class="hljs-string">&#x27;Reginol Node Positive&#x27;</span>, y=<span class="hljs-string">&#x27;Survival Months&#x27;</span>, ax=ax1)<br><br>ax1.set_title(<span class="hljs-string">&#x27;淋巴结转移阳性数量与生存时间的散点图&#x27;</span>)<br>ax1.set_xlabel(<span class="hljs-string">&#x27;淋巴结转移阳性数量&#x27;</span>)<br>ax1.set_ylabel(<span class="hljs-string">&#x27;生存时间&#x27;</span>)<br><br>plt.savefig(<span class="hljs-string">&#x27;1.tif&#x27;</span>, dpi=<span class="hljs-number">300</span>, bbox_inches=<span class="hljs-string">&#x27;tight&#x27;</span>)<br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_13_0.png" alt=" " /></p><h2 id="一定性数据可视化探索"><a class="markdownIt-Anchor" href="#一定性数据可视化探索"></a> （一）定性数据可视化探索</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">fig, ax = plt.subplots(nrows=<span class="hljs-number">1</span>, ncols=<span class="hljs-number">2</span>, figsize=(<span class="hljs-number">10</span>,<span class="hljs-number">4</span>))  <br>ax1 = ax[<span class="hljs-number">0</span>]    <span class="hljs-comment"># 坐标系1</span><br>ax2 = ax[<span class="hljs-number">1</span>]    <span class="hljs-comment"># 坐标系2</span><br><br>sns.countplot(data=dataset, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, ax=ax1, x=<span class="hljs-string">&#x27;Race&#x27;</span>,    )<br>sns.countplot(data=dataset, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, ax=ax2, x=<span class="hljs-string">&#x27;Marital Status&#x27;</span>,)<br><br>plt.tight_layout() <span class="hljs-comment"># 自适应排版</span><br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_15_0.png" alt=" " /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">fig, ax = plt.subplots(nrows=<span class="hljs-number">1</span>, ncols=<span class="hljs-number">2</span>, figsize=(<span class="hljs-number">10</span>,<span class="hljs-number">4</span>))  <br>ax1 = ax[<span class="hljs-number">0</span>]    <span class="hljs-comment"># 坐标系1</span><br>ax2 = ax[<span class="hljs-number">1</span>]    <span class="hljs-comment"># 坐标系2</span><br><br>sns.countplot(data=dataset, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, ax=ax1, x=<span class="hljs-string">&#x27;Estrogen Status&#x27;</span>,    )<br>sns.countplot(data=dataset, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, ax=ax2, x=<span class="hljs-string">&#x27;Progesterone Status&#x27;</span>,)<br><br>plt.tight_layout() <span class="hljs-comment"># 自适应排版</span><br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_16_0.png" alt=" " /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python">fig, axes = plt.subplots(nrows=<span class="hljs-number">2</span>, ncols=<span class="hljs-number">3</span>, figsize=(<span class="hljs-number">14</span>,<span class="hljs-number">8</span>))<br>ax1 = axes[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]<br>ax2 = axes[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]<br>ax3 = axes[<span class="hljs-number">0</span>,<span class="hljs-number">2</span>]<br>ax4 = axes[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>]<br>ax5 = axes[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>]<br>ax6 = axes[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>]<br><br>sns.countplot(data=dataset, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, ax=ax1, x=<span class="hljs-string">&#x27;T Stage &#x27;</span>,     )<br>sns.countplot(data=dataset, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, ax=ax2, x=<span class="hljs-string">&#x27;N Stage&#x27;</span>,      )<br>sns.countplot(data=dataset, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, ax=ax3, x=<span class="hljs-string">&#x27;6th Stage&#x27;</span>,    )<br>sns.countplot(data=dataset, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, ax=ax4, x=<span class="hljs-string">&#x27;A Stage&#x27;</span>,      )<br>sns.countplot(data=dataset, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, ax=ax5, x=<span class="hljs-string">&#x27;differentiate&#x27;</span>,)<br>sns.countplot(data=dataset, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, ax=ax6, x=<span class="hljs-string">&#x27;Grade&#x27;</span>,        )<br><br>plt.setp(ax5.get_xticklabels(), rotation=<span class="hljs-number">30</span>, ha=<span class="hljs-string">&quot;right&quot;</span>)  <span class="hljs-comment"># 旋转刻度值标签</span><br><br>plt.tight_layout() <br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_17_0.png" alt=" " /></p><h2 id="二定量数据可视化探索"><a class="markdownIt-Anchor" href="#二定量数据可视化探索"></a> （二）定量数据可视化探索</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 直方图</span><br>fig, ax = plt.subplots(figsize=(<span class="hljs-number">6</span>,<span class="hljs-number">4</span>))<br><br>sns.histplot(data=dataset, bins=<span class="hljs-number">20</span>, kde=<span class="hljs-literal">True</span>, ax=ax, x=<span class="hljs-string">&#x27;Age&#x27;</span>)<br><br></code></pre></td></tr></table></figure><pre><code class="hljs">&lt;AxesSubplot:xlabel='Age', ylabel='Count'&gt;</code></pre><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_19_1.png" alt=" " /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 箱线图</span><br>fig, ax = plt.subplots(figsize=(<span class="hljs-number">6</span>,<span class="hljs-number">4</span>)) <br><br>sns.boxplot(data=dataset, ax=ax, x=<span class="hljs-string">&#x27;Status&#x27;</span>, y=<span class="hljs-string">&#x27;Age&#x27;</span>)<br><br></code></pre></td></tr></table></figure><pre><code class="hljs">&lt;AxesSubplot:xlabel='Status', ylabel='Age'&gt;</code></pre><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_20_1.png" alt=" " /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">fig, ax = plt.subplots(nrows=<span class="hljs-number">1</span>, ncols=<span class="hljs-number">2</span>, figsize=(<span class="hljs-number">10</span>,<span class="hljs-number">4</span>))  <br>ax1 = ax[<span class="hljs-number">0</span>]<br>ax2 = ax[<span class="hljs-number">1</span>]<br><br>sns.histplot(data=dataset, bins=<span class="hljs-number">20</span>, kde=<span class="hljs-literal">True</span>, ax=ax1, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, x=<span class="hljs-string">&#x27;Age&#x27;</span>)<br>sns.boxplot(data=dataset, ax=ax2, x=<span class="hljs-string">&#x27;Status&#x27;</span>, y=<span class="hljs-string">&#x27;Age&#x27;</span>)<br><br>plt.tight_layout() <br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_21_0.png" alt=" " /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">fig, ax = plt.subplots(nrows=<span class="hljs-number">1</span>, ncols=<span class="hljs-number">2</span>, figsize=(<span class="hljs-number">10</span>,<span class="hljs-number">4</span>))  <br>ax1 = ax[<span class="hljs-number">0</span>]<br>ax2 = ax[<span class="hljs-number">1</span>]<br><br>sns.histplot(data=dataset, bins=<span class="hljs-number">20</span>, kde=<span class="hljs-literal">True</span>, ax=ax1, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, x=<span class="hljs-string">&#x27;Tumor Size&#x27;</span>)<br>sns.boxplot(data=dataset, ax=ax2, x=<span class="hljs-string">&#x27;Status&#x27;</span>, y=<span class="hljs-string">&#x27;Tumor Size&#x27;</span>)<br><br>plt.tight_layout() <br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_22_0.png" alt=" " /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">fig, ax = plt.subplots(nrows=<span class="hljs-number">1</span>, ncols=<span class="hljs-number">2</span>, figsize=(<span class="hljs-number">10</span>,<span class="hljs-number">4</span>))  <br>ax1 = ax[<span class="hljs-number">0</span>]<br>ax2 = ax[<span class="hljs-number">1</span>]<br><br>sns.histplot(data=dataset, bins=<span class="hljs-number">20</span>, kde=<span class="hljs-literal">True</span>, ax=ax1, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, x=<span class="hljs-string">&#x27;Regional Node Examined&#x27;</span>)<br>sns.boxplot(data=dataset, ax=ax2, x=<span class="hljs-string">&#x27;Status&#x27;</span>, y=<span class="hljs-string">&#x27;Regional Node Examined&#x27;</span>)<br><br>plt.tight_layout() <br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_23_0.png" alt=" " /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">fig, ax = plt.subplots(nrows=<span class="hljs-number">1</span>, ncols=<span class="hljs-number">2</span>, figsize=(<span class="hljs-number">10</span>,<span class="hljs-number">4</span>))  <br>ax1 = ax[<span class="hljs-number">0</span>]<br>ax2 = ax[<span class="hljs-number">1</span>]<br><br>sns.histplot(data=dataset, bins=<span class="hljs-number">20</span>, kde=<span class="hljs-literal">True</span>, ax=ax1, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, x=<span class="hljs-string">&#x27;Reginol Node Positive&#x27;</span>)<br>sns.boxplot(data=dataset, ax=ax2, x=<span class="hljs-string">&#x27;Status&#x27;</span>, y=<span class="hljs-string">&#x27;Reginol Node Positive&#x27;</span>)<br><br>plt.tight_layout() <br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_24_0.png" alt=" " /></p><h1 id="四-数据预处理"><a class="markdownIt-Anchor" href="#四-数据预处理"></a> 四、数据预处理</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df = dataset.copy()<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Age</th>      <th>Race</th>      <th>Marital Status</th>      <th>T Stage</th>      <th>N Stage</th>      <th>6th Stage</th>      <th>differentiate</th>      <th>Grade</th>      <th>A Stage</th>      <th>Tumor Size</th>      <th>Estrogen Status</th>      <th>Progesterone Status</th>      <th>Regional Node Examined</th>      <th>Reginol Node Positive</th>      <th>Survival Months</th>      <th>Status</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>68</td>      <td>White</td>      <td>Married</td>      <td>T1</td>      <td>N1</td>      <td>IIA</td>      <td>Poorly differentiated</td>      <td>3</td>      <td>Regional</td>      <td>4</td>      <td>Positive</td>      <td>Positive</td>      <td>24</td>      <td>1</td>      <td>60</td>      <td>Alive</td>    </tr>    <tr>      <th>1</th>      <td>50</td>      <td>White</td>      <td>Married</td>      <td>T2</td>      <td>N2</td>      <td>IIIA</td>      <td>Moderately differentiated</td>      <td>2</td>      <td>Regional</td>      <td>35</td>      <td>Positive</td>      <td>Positive</td>      <td>14</td>      <td>5</td>      <td>62</td>      <td>Alive</td>    </tr>    <tr>      <th>2</th>      <td>58</td>      <td>White</td>      <td>Divorced</td>      <td>T3</td>      <td>N3</td>      <td>IIIC</td>      <td>Moderately differentiated</td>      <td>2</td>      <td>Regional</td>      <td>63</td>      <td>Positive</td>      <td>Positive</td>      <td>14</td>      <td>7</td>      <td>75</td>      <td>Alive</td>    </tr>    <tr>      <th>3</th>      <td>58</td>      <td>White</td>      <td>Married</td>      <td>T1</td>      <td>N1</td>      <td>IIA</td>      <td>Poorly differentiated</td>      <td>3</td>      <td>Regional</td>      <td>18</td>      <td>Positive</td>      <td>Positive</td>      <td>2</td>      <td>1</td>      <td>84</td>      <td>Alive</td>    </tr>    <tr>      <th>4</th>      <td>47</td>      <td>White</td>      <td>Married</td>      <td>T2</td>      <td>N1</td>      <td>IIB</td>      <td>Poorly differentiated</td>      <td>3</td>      <td>Regional</td>      <td>41</td>      <td>Positive</td>      <td>Positive</td>      <td>3</td>      <td>1</td>      <td>50</td>      <td>Alive</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df.columns<br></code></pre></td></tr></table></figure><pre><code class="hljs">Index(['Age', 'Race', 'Marital Status', 'T Stage ', 'N Stage', '6th Stage',       'differentiate', 'Grade', 'A Stage', 'Tumor Size', 'Estrogen Status',       'Progesterone Status', 'Regional Node Examined',       'Reginol Node Positive', 'Survival Months', 'Status'],      dtype='object')</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 列名（特征名）重命名</span><br>df.columns = [<span class="hljs-string">&#x27;Age&#x27;</span>, <span class="hljs-string">&#x27;Race&#x27;</span>, <span class="hljs-string">&#x27;Marital Status&#x27;</span>, <span class="hljs-string">&#x27;T Stage&#x27;</span>, <span class="hljs-string">&#x27;N Stage&#x27;</span>, <span class="hljs-string">&#x27;6th Stage&#x27;</span>,<br>              <span class="hljs-string">&#x27;differentiate&#x27;</span>, <span class="hljs-string">&#x27;Grade&#x27;</span>, <span class="hljs-string">&#x27;A Stage&#x27;</span>, <span class="hljs-string">&#x27;Tumor Size&#x27;</span>, <span class="hljs-string">&#x27;Estrogen Status&#x27;</span>,<br>              <span class="hljs-string">&#x27;Progesterone Status&#x27;</span>, <span class="hljs-string">&#x27;Regional Node Examined&#x27;</span>,<br>              <span class="hljs-string">&#x27;Regional Node Positive&#x27;</span>, <span class="hljs-string">&#x27;Survival Months&#x27;</span>, <span class="hljs-string">&#x27;Status&#x27;</span>]<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df.columns<br></code></pre></td></tr></table></figure><pre><code class="hljs">Index(['Age', 'Race', 'Marital Status', 'T Stage', 'N Stage', '6th Stage',       'differentiate', 'Grade', 'A Stage', 'Tumor Size', 'Estrogen Status',       'Progesterone Status', 'Regional Node Examined',       'Regional Node Positive', 'Survival Months', 'Status'],      dtype='object')</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df[<span class="hljs-string">&#x27;Grade&#x27;</span>].value_counts()<br></code></pre></td></tr></table></figure><pre><code class="hljs">2                        23513                        11111                         543 anaplastic; Grade IV      19Name: Grade, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 变量值重编码 df.loc[index, columns_name] = value</span><br><br>df.loc[df[<span class="hljs-string">&#x27;Grade&#x27;</span>]==<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;Grade&#x27;</span>] = <span class="hljs-string">&#x27;Ⅰ&#x27;</span><br>df.loc[df[<span class="hljs-string">&#x27;Grade&#x27;</span>]==<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;Grade&#x27;</span>] = <span class="hljs-string">&#x27;Ⅱ&#x27;</span><br>df.loc[df[<span class="hljs-string">&#x27;Grade&#x27;</span>]==<span class="hljs-number">3</span>, <span class="hljs-string">&#x27;Grade&#x27;</span>] = <span class="hljs-string">&#x27;Ⅲ&#x27;</span><br>df.loc[df[<span class="hljs-string">&#x27;Grade&#x27;</span>]==<span class="hljs-string">&#x27; anaplastic; Grade IV&#x27;</span>, <span class="hljs-string">&#x27;Grade&#x27;</span>] = <span class="hljs-string">&#x27;IV&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df[<span class="hljs-string">&#x27;Grade&#x27;</span>].value_counts()<br></code></pre></td></tr></table></figure><pre><code class="hljs">Ⅱ     2351Ⅲ     1111Ⅰ      543IV      19Name: Grade, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df[<span class="hljs-string">&#x27;Marital Status&#x27;</span>].value_counts()<br></code></pre></td></tr></table></figure><pre><code class="hljs">Married      2643Single        615Divorced      486Widowed       235Separated      45Name: Marital Status, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">df.loc[df[<span class="hljs-string">&#x27;Marital Status&#x27;</span>] == <span class="hljs-string">&#x27;Divorced&#x27;</span>, <span class="hljs-string">&#x27;Marital Status&#x27;</span>] = <span class="hljs-string">&#x27;Other&#x27;</span><br>df.loc[df[<span class="hljs-string">&#x27;Marital Status&#x27;</span>] == <span class="hljs-string">&#x27;Widowed&#x27;</span>, <span class="hljs-string">&#x27;Marital Status&#x27;</span>] = <span class="hljs-string">&#x27;Other&#x27;</span><br>df.loc[df[<span class="hljs-string">&#x27;Marital Status&#x27;</span>] == <span class="hljs-string">&#x27;Separated&#x27;</span>, <span class="hljs-string">&#x27;Marital Status&#x27;</span>] = <span class="hljs-string">&#x27;Other&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df[<span class="hljs-string">&#x27;Marital Status&#x27;</span>].value_counts()<br></code></pre></td></tr></table></figure><pre><code class="hljs">Married    2643Other       766Single      615Name: Marital Status, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">df.loc[df[<span class="hljs-string">&#x27;Age&#x27;</span>]&gt;=<span class="hljs-number">50</span>, <span class="hljs-string">&#x27;Age&#x27;</span>] = <span class="hljs-number">2</span><br>df.loc[df[<span class="hljs-string">&#x27;Age&#x27;</span>]&gt;=<span class="hljs-number">40</span>, <span class="hljs-string">&#x27;Age&#x27;</span>] = <span class="hljs-number">1</span><br>df.loc[df[<span class="hljs-string">&#x27;Age&#x27;</span>]&gt;=<span class="hljs-number">30</span>, <span class="hljs-string">&#x27;Age&#x27;</span>] = <span class="hljs-number">0</span><br><br>df.loc[df[<span class="hljs-string">&#x27;Age&#x27;</span>]==<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;Age&#x27;</span>] = <span class="hljs-string">&#x27;elderly&#x27;</span><br>df.loc[df[<span class="hljs-string">&#x27;Age&#x27;</span>]==<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;Age&#x27;</span>] = <span class="hljs-string">&#x27;middle aged&#x27;</span><br>df.loc[df[<span class="hljs-string">&#x27;Age&#x27;</span>]==<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;Age&#x27;</span>] = <span class="hljs-string">&#x27;thirties&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df[<span class="hljs-string">&#x27;Age&#x27;</span>].value_counts()<br></code></pre></td></tr></table></figure><pre><code class="hljs">elderly        2670middle aged    1124thirties        230Name: Age, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Age</th>      <th>Race</th>      <th>Marital Status</th>      <th>T Stage</th>      <th>N Stage</th>      <th>6th Stage</th>      <th>differentiate</th>      <th>Grade</th>      <th>A Stage</th>      <th>Tumor Size</th>      <th>Estrogen Status</th>      <th>Progesterone Status</th>      <th>Regional Node Examined</th>      <th>Regional Node Positive</th>      <th>Survival Months</th>      <th>Status</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>elderly</td>      <td>White</td>      <td>Married</td>      <td>T1</td>      <td>N1</td>      <td>IIA</td>      <td>Poorly differentiated</td>      <td>Ⅲ</td>      <td>Regional</td>      <td>4</td>      <td>Positive</td>      <td>Positive</td>      <td>24</td>      <td>1</td>      <td>60</td>      <td>Alive</td>    </tr>    <tr>      <th>1</th>      <td>elderly</td>      <td>White</td>      <td>Married</td>      <td>T2</td>      <td>N2</td>      <td>IIIA</td>      <td>Moderately differentiated</td>      <td>Ⅱ</td>      <td>Regional</td>      <td>35</td>      <td>Positive</td>      <td>Positive</td>      <td>14</td>      <td>5</td>      <td>62</td>      <td>Alive</td>    </tr>    <tr>      <th>2</th>      <td>elderly</td>      <td>White</td>      <td>Other</td>      <td>T3</td>      <td>N3</td>      <td>IIIC</td>      <td>Moderately differentiated</td>      <td>Ⅱ</td>      <td>Regional</td>      <td>63</td>      <td>Positive</td>      <td>Positive</td>      <td>14</td>      <td>7</td>      <td>75</td>      <td>Alive</td>    </tr>    <tr>      <th>3</th>      <td>elderly</td>      <td>White</td>      <td>Married</td>      <td>T1</td>      <td>N1</td>      <td>IIA</td>      <td>Poorly differentiated</td>      <td>Ⅲ</td>      <td>Regional</td>      <td>18</td>      <td>Positive</td>      <td>Positive</td>      <td>2</td>      <td>1</td>      <td>84</td>      <td>Alive</td>    </tr>    <tr>      <th>4</th>      <td>middle aged</td>      <td>White</td>      <td>Married</td>      <td>T2</td>      <td>N1</td>      <td>IIB</td>      <td>Poorly differentiated</td>      <td>Ⅲ</td>      <td>Regional</td>      <td>41</td>      <td>Positive</td>      <td>Positive</td>      <td>3</td>      <td>1</td>      <td>50</td>      <td>Alive</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 数据逻辑判断</span><br>df.loc[df[<span class="hljs-string">&#x27;Regional Node Positive&#x27;</span>]&gt;df[<span class="hljs-string">&#x27;Regional Node Examined&#x27;</span>],:]<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Age</th>      <th>Race</th>      <th>Marital Status</th>      <th>T Stage</th>      <th>N Stage</th>      <th>6th Stage</th>      <th>differentiate</th>      <th>Grade</th>      <th>A Stage</th>      <th>Tumor Size</th>      <th>Estrogen Status</th>      <th>Progesterone Status</th>      <th>Regional Node Examined</th>      <th>Regional Node Positive</th>      <th>Survival Months</th>      <th>Status</th>    </tr>  </thead>  <tbody>  </tbody></table></div><h1 id="五-统计检验"><a class="markdownIt-Anchor" href="#五-统计检验"></a> 五、统计检验</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 正态性检验 Shapiro–Wilk test</span><br><span class="hljs-keyword">from</span> scipy.stats <span class="hljs-keyword">import</span> shapiro<br><br>num_columns = [<span class="hljs-string">&#x27;Tumor Size&#x27;</span>, <span class="hljs-string">&#x27;Regional Node Examined&#x27;</span>, <span class="hljs-string">&#x27;Regional Node Positive&#x27;</span>, <span class="hljs-string">&#x27;Survival Months&#x27;</span>]<br><span class="hljs-keyword">for</span> column <span class="hljs-keyword">in</span> num_columns:<br>    stat,p = shapiro(df[column])<br>    <span class="hljs-built_in">print</span>(column, <span class="hljs-string">&quot;\n 统计量：%f &quot;</span> %stat,<span class="hljs-string">&quot; p值为：%f \n&quot;</span> %p)<br></code></pre></td></tr></table></figure><pre><code class="hljs">Tumor Size  统计量：0.841386   p值为：0.000000 Regional Node Examined  统计量：0.959947   p值为：0.000000 Regional Node Positive  统计量：0.653167   p值为：0.000000 Survival Months  统计量：0.962401   p值为：0.000000 </code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 方差齐性检验 levene检验</span><br><span class="hljs-keyword">from</span> scipy.stats <span class="hljs-keyword">import</span> levene<br>num_columns = [<span class="hljs-string">&#x27;Tumor Size&#x27;</span>, <span class="hljs-string">&#x27;Regional Node Examined&#x27;</span>, <span class="hljs-string">&#x27;Regional Node Positive&#x27;</span>, <span class="hljs-string">&#x27;Survival Months&#x27;</span>]<br><span class="hljs-keyword">for</span> column <span class="hljs-keyword">in</span> num_columns:<br>    d1 = df.loc[df[<span class="hljs-string">&#x27;Status&#x27;</span>]==<span class="hljs-string">&#x27;Alive&#x27;</span>, column]<br>    d2 = df.loc[df[<span class="hljs-string">&#x27;Status&#x27;</span>]==<span class="hljs-string">&#x27;Dead&#x27;</span>, column]<br>    stat, p = levene(d1, d2)<br>    <span class="hljs-built_in">print</span>(column, <span class="hljs-string">&quot;\n 统计量：%f &quot;</span> %stat,<span class="hljs-string">&quot; p值为：%f \n&quot;</span> %p)<br></code></pre></td></tr></table></figure><pre><code class="hljs">Tumor Size  统计量：25.620942   p值为：0.000000 Regional Node Examined  统计量：2.684287   p值为：0.101421 Regional Node Positive  统计量：218.336354   p值为：0.000000 Survival Months  统计量：48.542707   p值为：0.000000 </code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 独立样本t检验</span><br><span class="hljs-keyword">from</span> scipy.stats <span class="hljs-keyword">import</span> ttest_ind<br>num_columns = [<span class="hljs-string">&#x27;Tumor Size&#x27;</span>, <span class="hljs-string">&#x27;Regional Node Examined&#x27;</span>, <span class="hljs-string">&#x27;Regional Node Positive&#x27;</span>, <span class="hljs-string">&#x27;Survival Months&#x27;</span>]<br><span class="hljs-keyword">for</span> column <span class="hljs-keyword">in</span> num_columns:<br>    d1 = df.loc[df[<span class="hljs-string">&#x27;Status&#x27;</span>]==<span class="hljs-string">&#x27;Alive&#x27;</span>, column]<br>    d2 = df.loc[df[<span class="hljs-string">&#x27;Status&#x27;</span>]==<span class="hljs-string">&#x27;Dead&#x27;</span>, column]<br>    stat,p = ttest_ind(d1,d2)<br>    <span class="hljs-built_in">print</span>(column, <span class="hljs-string">&quot;\n 统计量：%f &quot;</span> %stat,<span class="hljs-string">&quot; p值为：%f \n&quot;</span> %p)<br></code></pre></td></tr></table></figure><pre><code class="hljs">Tumor Size  统计量：-8.588885   p值为：0.000000 Regional Node Examined  统计量：-2.206548   p值为：0.027402 Regional Node Positive  统计量：-16.839798   p值为：0.000000 Survival Months  统计量：34.373652   p值为：0.000000 </code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Kruskal-wallis H检验</span><br><span class="hljs-keyword">from</span> scipy.stats <span class="hljs-keyword">import</span> kruskal<br>num_columns = [<span class="hljs-string">&#x27;Tumor Size&#x27;</span>, <span class="hljs-string">&#x27;Regional Node Examined&#x27;</span>, <span class="hljs-string">&#x27;Regional Node Positive&#x27;</span>, <span class="hljs-string">&#x27;Survival Months&#x27;</span>]<br><span class="hljs-keyword">for</span> column <span class="hljs-keyword">in</span> num_columns:<br>    d1 = df.loc[df[<span class="hljs-string">&#x27;Status&#x27;</span>]==<span class="hljs-string">&#x27;Alive&#x27;</span>, column]<br>    d2 = df.loc[df[<span class="hljs-string">&#x27;Status&#x27;</span>]==<span class="hljs-string">&#x27;Dead&#x27;</span>, column]<br>    stat,p = kruskal(d1,d2)<br>    <span class="hljs-built_in">print</span>(column, <span class="hljs-string">&quot;\n 统计量：%f &quot;</span> %stat,<span class="hljs-string">&quot; p值为：%f \n&quot;</span> %p)<br></code></pre></td></tr></table></figure><pre><code class="hljs">Tumor Size  统计量：79.489347   p值为：0.000000 Regional Node Examined  统计量：3.347812   p值为：0.067294 Regional Node Positive  统计量：193.064051   p值为：0.000000 Survival Months  统计量：694.131827   p值为：0.000000 </code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 卡方检验</span><br><span class="hljs-keyword">from</span> scipy.stats <span class="hljs-keyword">import</span> chi2_contingency<br>num_columns = [<span class="hljs-string">&#x27;Age&#x27;</span>, <span class="hljs-string">&#x27;Race&#x27;</span>, <span class="hljs-string">&#x27;Marital Status&#x27;</span>, <span class="hljs-string">&#x27;T Stage&#x27;</span>, <span class="hljs-string">&#x27;N Stage&#x27;</span>, <span class="hljs-string">&#x27;6th Stage&#x27;</span>,<br>       <span class="hljs-string">&#x27;differentiate&#x27;</span>, <span class="hljs-string">&#x27;Grade&#x27;</span>, <span class="hljs-string">&#x27;A Stage&#x27;</span>, <span class="hljs-string">&#x27;Estrogen Status&#x27;</span>,<span class="hljs-string">&#x27;Progesterone Status&#x27;</span>]<br><span class="hljs-keyword">for</span> column <span class="hljs-keyword">in</span> num_columns:<br>    stat,p,dof,expected = chi2_contingency(pd.crosstab(df[column],df[<span class="hljs-string">&#x27;Status&#x27;</span>]))<br>    <span class="hljs-built_in">print</span>(column, <span class="hljs-string">&quot;\n 统计量：%f &quot;</span> %stat,<span class="hljs-string">&quot; p值：%f \n&quot;</span> %p)<br></code></pre></td></tr></table></figure><pre><code class="hljs">Age  统计量：15.289546   p值：0.000479 Race  统计量：27.970007   p值：0.000001 Marital Status  统计量：21.145650   p值：0.000026 T Stage  统计量：103.476309   p值：0.000000 N Stage  统计量：269.929143   p值：0.000000 6th Stage  统计量：281.648443   p值：0.000000 differentiate  统计量：112.556276   p值：0.000000 Grade  统计量：112.556276   p值：0.000000 A Stage  统计量：35.764727   p值：0.000000 Estrogen Status  统计量：135.155739   p值：0.000000 Progesterone Status  统计量：124.885388   p值：0.000000 </code></pre><h1 id="六-数据编码"><a class="markdownIt-Anchor" href="#六-数据编码"></a> 六、数据编码</h1><h2 id="一定量资料"><a class="markdownIt-Anchor" href="#一定量资料"></a> （一）定量资料</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">X_num = df[[<span class="hljs-string">&#x27;Tumor Size&#x27;</span>, <span class="hljs-string">&#x27;Regional Node Examined&#x27;</span>, <span class="hljs-string">&#x27;Regional Node Positive&#x27;</span>, <span class="hljs-string">&#x27;Survival Months&#x27;</span> ]]<br>X_num.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Tumor Size</th>      <th>Regional Node Examined</th>      <th>Regional Node Positive</th>      <th>Survival Months</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>4</td>      <td>24</td>      <td>1</td>      <td>60</td>    </tr>    <tr>      <th>1</th>      <td>35</td>      <td>14</td>      <td>5</td>      <td>62</td>    </tr>    <tr>      <th>2</th>      <td>63</td>      <td>14</td>      <td>7</td>      <td>75</td>    </tr>    <tr>      <th>3</th>      <td>18</td>      <td>2</td>      <td>1</td>      <td>84</td>    </tr>    <tr>      <th>4</th>      <td>41</td>      <td>3</td>      <td>1</td>      <td>50</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">X_num.describe()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Tumor Size</th>      <th>Regional Node Examined</th>      <th>Regional Node Positive</th>      <th>Survival Months</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>4024.000000</td>      <td>4024.000000</td>      <td>4024.000000</td>      <td>4024.000000</td>    </tr>    <tr>      <th>mean</th>      <td>30.473658</td>      <td>14.357107</td>      <td>4.158052</td>      <td>71.297962</td>    </tr>    <tr>      <th>std</th>      <td>21.119696</td>      <td>8.099675</td>      <td>5.109331</td>      <td>22.921430</td>    </tr>    <tr>      <th>min</th>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>    </tr>    <tr>      <th>25%</th>      <td>16.000000</td>      <td>9.000000</td>      <td>1.000000</td>      <td>56.000000</td>    </tr>    <tr>      <th>50%</th>      <td>25.000000</td>      <td>14.000000</td>      <td>2.000000</td>      <td>73.000000</td>    </tr>    <tr>      <th>75%</th>      <td>38.000000</td>      <td>19.000000</td>      <td>5.000000</td>      <td>90.000000</td>    </tr>    <tr>      <th>max</th>      <td>140.000000</td>      <td>61.000000</td>      <td>46.000000</td>      <td>107.000000</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 数据标准化</span><br>X_num_norm = (X_num - X_num.mean()) / X_num.std()<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">X_num_norm.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Tumor Size</th>      <th>Regional Node Examined</th>      <th>Regional Node Positive</th>      <th>Survival Months</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>-1.253506</td>      <td>1.190528</td>      <td>-0.618095</td>      <td>-0.492900</td>    </tr>    <tr>      <th>1</th>      <td>0.214319</td>      <td>-0.044089</td>      <td>0.164786</td>      <td>-0.405645</td>    </tr>    <tr>      <th>2</th>      <td>1.540095</td>      <td>-0.044089</td>      <td>0.556227</td>      <td>0.161510</td>    </tr>    <tr>      <th>3</th>      <td>-0.590617</td>      <td>-1.525630</td>      <td>-0.618095</td>      <td>0.554156</td>    </tr>    <tr>      <th>4</th>      <td>0.498414</td>      <td>-1.402168</td>      <td>-0.618095</td>      <td>-0.929173</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">X_num_norm.describe()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Tumor Size</th>      <th>Regional Node Examined</th>      <th>Regional Node Positive</th>      <th>Survival Months</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>4.024000e+03</td>      <td>4.024000e+03</td>      <td>4.024000e+03</td>      <td>4.024000e+03</td>    </tr>    <tr>      <th>mean</th>      <td>4.679270e-17</td>      <td>5.650439e-17</td>      <td>1.187475e-16</td>      <td>3.063598e-16</td>    </tr>    <tr>      <th>std</th>      <td>1.000000e+00</td>      <td>1.000000e+00</td>      <td>1.000000e+00</td>      <td>1.000000e+00</td>    </tr>    <tr>      <th>min</th>      <td>-1.395553e+00</td>      <td>-1.649092e+00</td>      <td>-6.180949e-01</td>      <td>-3.066910e+00</td>    </tr>    <tr>      <th>25%</th>      <td>-6.853156e-01</td>      <td>-6.613978e-01</td>      <td>-6.180949e-01</td>      <td>-6.674087e-01</td>    </tr>    <tr>      <th>50%</th>      <td>-2.591731e-01</td>      <td>-4.408910e-02</td>      <td>-4.223746e-01</td>      <td>7.425531e-02</td>    </tr>    <tr>      <th>75%</th>      <td>3.563660e-01</td>      <td>5.732196e-01</td>      <td>1.647864e-01</td>      <td>8.159193e-01</td>    </tr>    <tr>      <th>max</th>      <td>5.185981e+00</td>      <td>5.758613e+00</td>      <td>8.189320e+00</td>      <td>1.557583e+00</td>    </tr>  </tbody></table></div><h2 id="二定性资料"><a class="markdownIt-Anchor" href="#二定性资料"></a> (二)定性资料</h2><h3 id="二分类资料或等级资料"><a class="markdownIt-Anchor" href="#二分类资料或等级资料"></a> 二分类资料或等级资料</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">X_deg = df[[<span class="hljs-string">&#x27;T Stage&#x27;</span>, <span class="hljs-string">&#x27;N Stage&#x27;</span>, <span class="hljs-string">&#x27;6th Stage&#x27;</span>,<span class="hljs-string">&#x27;differentiate&#x27;</span>, <br>            <span class="hljs-string">&#x27;Grade&#x27;</span>, <span class="hljs-string">&#x27;A Stage&#x27;</span>,<span class="hljs-string">&#x27;Estrogen Status&#x27;</span>,<span class="hljs-string">&#x27;Progesterone Status&#x27;</span>,<span class="hljs-string">&#x27;Status&#x27;</span>]]<br><br>X_deg.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>T Stage</th>      <th>N Stage</th>      <th>6th Stage</th>      <th>differentiate</th>      <th>Grade</th>      <th>A Stage</th>      <th>Estrogen Status</th>      <th>Progesterone Status</th>      <th>Status</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>T1</td>      <td>N1</td>      <td>IIA</td>      <td>Poorly differentiated</td>      <td>Ⅲ</td>      <td>Regional</td>      <td>Positive</td>      <td>Positive</td>      <td>Alive</td>    </tr>    <tr>      <th>1</th>      <td>T2</td>      <td>N2</td>      <td>IIIA</td>      <td>Moderately differentiated</td>      <td>Ⅱ</td>      <td>Regional</td>      <td>Positive</td>      <td>Positive</td>      <td>Alive</td>    </tr>    <tr>      <th>2</th>      <td>T3</td>      <td>N3</td>      <td>IIIC</td>      <td>Moderately differentiated</td>      <td>Ⅱ</td>      <td>Regional</td>      <td>Positive</td>      <td>Positive</td>      <td>Alive</td>    </tr>    <tr>      <th>3</th>      <td>T1</td>      <td>N1</td>      <td>IIA</td>      <td>Poorly differentiated</td>      <td>Ⅲ</td>      <td>Regional</td>      <td>Positive</td>      <td>Positive</td>      <td>Alive</td>    </tr>    <tr>      <th>4</th>      <td>T2</td>      <td>N1</td>      <td>IIB</td>      <td>Poorly differentiated</td>      <td>Ⅲ</td>      <td>Regional</td>      <td>Positive</td>      <td>Positive</td>      <td>Alive</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 编码</span><br>pd.set_option(<span class="hljs-string">&#x27;mode.chained_assignment&#x27;</span>, <span class="hljs-literal">None</span>)<br>X_deg.loc[:,<span class="hljs-string">&#x27;Status&#x27;</span>] = X_deg[<span class="hljs-string">&#x27;Status&#x27;</span>].<span class="hljs-built_in">map</span>(&#123;<span class="hljs-string">&#x27;Alive&#x27;</span>:<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;Dead&#x27;</span>:<span class="hljs-number">1</span>&#125;).astype(<span class="hljs-string">&quot;int64&quot;</span>)<br>X_deg.loc[:,<span class="hljs-string">&#x27;Grade&#x27;</span>] = X_deg[<span class="hljs-string">&#x27;Grade&#x27;</span>].<span class="hljs-built_in">map</span>(&#123;<span class="hljs-string">&#x27;Ⅰ&#x27;</span>:<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;Ⅱ&#x27;</span>:<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;Ⅲ&#x27;</span>:<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;IV&#x27;</span>:<span class="hljs-number">3</span>&#125;).astype(<span class="hljs-string">&quot;int64&quot;</span>)<br>X_deg.loc[:,<span class="hljs-string">&#x27;T Stage&#x27;</span>] = X_deg[<span class="hljs-string">&#x27;T Stage&#x27;</span>].<span class="hljs-built_in">map</span>(&#123;<span class="hljs-string">&#x27;T1&#x27;</span>:<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;T2&#x27;</span>:<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;T3&#x27;</span>:<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;T4&#x27;</span>:<span class="hljs-number">3</span>&#125;).astype(<span class="hljs-string">&quot;int64&quot;</span>)<br>X_deg.loc[:,<span class="hljs-string">&#x27;N Stage&#x27;</span>] = X_deg[<span class="hljs-string">&#x27;N Stage&#x27;</span>].<span class="hljs-built_in">map</span>(&#123;<span class="hljs-string">&#x27;N1&#x27;</span>:<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;N2&#x27;</span>:<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;N3&#x27;</span>:<span class="hljs-number">2</span>&#125;).astype(<span class="hljs-string">&quot;int64&quot;</span>)<br>X_deg.loc[:,<span class="hljs-string">&#x27;A Stage&#x27;</span>] = X_deg[<span class="hljs-string">&#x27;A Stage&#x27;</span>].<span class="hljs-built_in">map</span>(&#123;<span class="hljs-string">&#x27;Regional&#x27;</span>:<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;Distant&#x27;</span>:<span class="hljs-number">1</span>&#125;).astype(<span class="hljs-string">&quot;int64&quot;</span>)<br>X_deg.loc[:,<span class="hljs-string">&#x27;6th Stage&#x27;</span>] = X_deg[<span class="hljs-string">&#x27;6th Stage&#x27;</span>].<span class="hljs-built_in">map</span>(&#123;<span class="hljs-string">&#x27;IIA&#x27;</span>:<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;IIB&#x27;</span>:<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;IIIA&#x27;</span>:<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;IIIB&#x27;</span>:<span class="hljs-number">3</span>, <span class="hljs-string">&#x27;IIIC&#x27;</span>:<span class="hljs-number">4</span>&#125;).astype(<span class="hljs-string">&quot;int64&quot;</span>)<br>X_deg.loc[:,<span class="hljs-string">&#x27;Estrogen Status&#x27;</span>] = X_deg[<span class="hljs-string">&#x27;Estrogen Status&#x27;</span>].<span class="hljs-built_in">map</span>(&#123;<span class="hljs-string">&#x27;Negative&#x27;</span>:<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;Positive&#x27;</span>:<span class="hljs-number">1</span>&#125;).astype(<span class="hljs-string">&quot;int64&quot;</span>)<br>X_deg.loc[:,<span class="hljs-string">&#x27;Progesterone Status&#x27;</span>] = X_deg[<span class="hljs-string">&#x27;Progesterone Status&#x27;</span>].<span class="hljs-built_in">map</span>(&#123;<span class="hljs-string">&#x27;Negative&#x27;</span>:<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;Positive&#x27;</span>:<span class="hljs-number">1</span>&#125;).astype(<span class="hljs-string">&quot;int64&quot;</span>)<br>X_deg.loc[:,<span class="hljs-string">&#x27;differentiate&#x27;</span>] = X_deg[<span class="hljs-string">&#x27;differentiate&#x27;</span>].<span class="hljs-built_in">map</span>(&#123;<span class="hljs-string">&#x27;Well differentiated&#x27;</span>:<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;Moderately differentiated&#x27;</span>:<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;Poorly differentiated&#x27;</span>:<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;Undifferentiated&#x27;</span>:<span class="hljs-number">3</span>&#125;).astype(<span class="hljs-string">&quot;int64&quot;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">X_deg.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>T Stage</th>      <th>N Stage</th>      <th>6th Stage</th>      <th>differentiate</th>      <th>Grade</th>      <th>A Stage</th>      <th>Estrogen Status</th>      <th>Progesterone Status</th>      <th>Status</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>0</td>      <td>0</td>      <td>0</td>      <td>2</td>      <td>2</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>1</th>      <td>1</td>      <td>1</td>      <td>2</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>2</th>      <td>2</td>      <td>2</td>      <td>4</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>3</th>      <td>0</td>      <td>0</td>      <td>0</td>      <td>2</td>      <td>2</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>4</th>      <td>1</td>      <td>0</td>      <td>1</td>      <td>2</td>      <td>2</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>  </tbody></table></div><h3 id="无序多分类变量"><a class="markdownIt-Anchor" href="#无序多分类变量"></a> 无序多分类变量</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">X_cat = df[[<span class="hljs-string">&#x27;Age&#x27;</span>,<span class="hljs-string">&#x27;Race&#x27;</span>,<span class="hljs-string">&#x27;Marital Status&#x27;</span>]]<br>X_cat.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Age</th>      <th>Race</th>      <th>Marital Status</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>elderly</td>      <td>White</td>      <td>Married</td>    </tr>    <tr>      <th>1</th>      <td>elderly</td>      <td>White</td>      <td>Married</td>    </tr>    <tr>      <th>2</th>      <td>elderly</td>      <td>White</td>      <td>Other</td>    </tr>    <tr>      <th>3</th>      <td>elderly</td>      <td>White</td>      <td>Married</td>    </tr>    <tr>      <th>4</th>      <td>middle aged</td>      <td>White</td>      <td>Married</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 哑变量编码</span><br>X_cat = pd.get_dummies(X_cat)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">X_cat.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Age_elderly</th>      <th>Age_middle aged</th>      <th>Age_thirties</th>      <th>Race_Black</th>      <th>Race_Other</th>      <th>Race_White</th>      <th>Marital Status_Married</th>      <th>Marital Status_Other</th>      <th>Marital Status_Single</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>1</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>2</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>0</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>3</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>4</th>      <td>0</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>0</td>    </tr>  </tbody></table></div><h3 id="合并编码后的数据资料"><a class="markdownIt-Anchor" href="#合并编码后的数据资料"></a> 合并编码后的数据资料</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">data = pd.concat([X_num_norm, X_cat, X_deg], axis=<span class="hljs-number">1</span>)<br>data.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Tumor Size</th>      <th>Regional Node Examined</th>      <th>Regional Node Positive</th>      <th>Survival Months</th>      <th>Age_elderly</th>      <th>Age_middle aged</th>      <th>Age_thirties</th>      <th>Race_Black</th>      <th>Race_Other</th>      <th>Race_White</th>      <th>...</th>      <th>Marital Status_Single</th>      <th>T Stage</th>      <th>N Stage</th>      <th>6th Stage</th>      <th>differentiate</th>      <th>Grade</th>      <th>A Stage</th>      <th>Estrogen Status</th>      <th>Progesterone Status</th>      <th>Status</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>-1.253506</td>      <td>1.190528</td>      <td>-0.618095</td>      <td>-0.492900</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>2</td>      <td>2</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>1</th>      <td>0.214319</td>      <td>-0.044089</td>      <td>0.164786</td>      <td>-0.405645</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>2</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>2</th>      <td>1.540095</td>      <td>-0.044089</td>      <td>0.556227</td>      <td>0.161510</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>2</td>      <td>2</td>      <td>4</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>3</th>      <td>-0.590617</td>      <td>-1.525630</td>      <td>-0.618095</td>      <td>0.554156</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>2</td>      <td>2</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>4</th>      <td>0.498414</td>      <td>-1.402168</td>      <td>-0.618095</td>      <td>-0.929173</td>      <td>0</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>1</td>      <td>0</td>      <td>1</td>      <td>2</td>      <td>2</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>  </tbody></table><p>5 rows × 22 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">data.info()<br></code></pre></td></tr></table></figure><pre><code class="hljs">&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 4024 entries, 0 to 4023Data columns (total 22 columns): #   Column                  Non-Null Count  Dtype  ---  ------                  --------------  -----   0   Tumor Size              4024 non-null   float64 1   Regional Node Examined  4024 non-null   float64 2   Regional Node Positive  4024 non-null   float64 3   Survival Months         4024 non-null   float64 4   Age_elderly             4024 non-null   uint8   5   Age_middle aged         4024 non-null   uint8   6   Age_thirties            4024 non-null   uint8   7   Race_Black              4024 non-null   uint8   8   Race_Other              4024 non-null   uint8   9   Race_White              4024 non-null   uint8   10  Marital Status_Married  4024 non-null   uint8   11  Marital Status_Other    4024 non-null   uint8   12  Marital Status_Single   4024 non-null   uint8   13  T Stage                 4024 non-null   int64   14  N Stage                 4024 non-null   int64   15  6th Stage               4024 non-null   int64   16  differentiate           4024 non-null   int64   17  Grade                   4024 non-null   int64   18  A Stage                 4024 non-null   int64   19  Estrogen Status         4024 non-null   int64   20  Progesterone Status     4024 non-null   int64   21  Status                  4024 non-null   int64  dtypes: float64(4), int64(9), uint8(9)memory usage: 444.2 KB</code></pre><h1 id="七-相关性分析"><a class="markdownIt-Anchor" href="#七-相关性分析"></a> 七、相关性分析</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 散点图</span><br>fig, ax = plt.subplots(figsize=(<span class="hljs-number">6</span>,<span class="hljs-number">4</span>))<br>sns.scatterplot(data=data, x=<span class="hljs-string">&#x27;Regional Node Examined&#x27;</span>, y=<span class="hljs-string">&#x27;Regional Node Positive&#x27;</span>, <br>                     hue=<span class="hljs-string">&#x27;Status&#x27;</span>, palette=<span class="hljs-string">&#x27;Blues&#x27;</span>, ax=ax)<br><br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_67_0.png" alt=" " /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 相关系数矩阵</span><br>dcorr = data.corr(method=<span class="hljs-string">&#x27;spearman&#x27;</span>)<br><span class="hljs-comment"># dcorr</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 相关系数热图</span><br>fig, ax = plt.subplots(figsize=(<span class="hljs-number">20</span>,<span class="hljs-number">16</span>))<br>sns.heatmap(dcorr, cmap=<span class="hljs-string">&#x27;Blues&#x27;</span>, annot=<span class="hljs-literal">True</span>, fmt=<span class="hljs-string">&#x27;.2f&#x27;</span>, linewidths=<span class="hljs-number">2</span>, linecolor=<span class="hljs-string">&#x27;white&#x27;</span>, square=<span class="hljs-literal">True</span>, ax=ax)<br><br>ax.tick_params(bottom=<span class="hljs-literal">False</span>, labelbottom=<span class="hljs-literal">False</span>, top=<span class="hljs-literal">True</span>, labeltop=<span class="hljs-literal">True</span>)  <span class="hljs-comment">#修改坐标轴显示</span><br>plt.setp(ax.get_xticklabels(), rotation= <span class="hljs-number">60</span>, ha=<span class="hljs-string">&quot;left&quot;</span>)    <span class="hljs-comment"># 旋转坐标轴标签的显示方向</span><br><br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_69_0.png" alt=" " /></p><h1 id="八-逻辑回归分析"><a class="markdownIt-Anchor" href="#八-逻辑回归分析"></a> 八、逻辑回归分析</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">X = data.iloc[:, :-<span class="hljs-number">1</span>]<br><span class="hljs-comment"># 人工添加截距项</span><br>X[<span class="hljs-string">&#x27;intercept&#x27;</span>] = <span class="hljs-number">1.0</span> <br>X.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Tumor Size</th>      <th>Regional Node Examined</th>      <th>Regional Node Positive</th>      <th>Survival Months</th>      <th>Age_elderly</th>      <th>Age_middle aged</th>      <th>Age_thirties</th>      <th>Race_Black</th>      <th>Race_Other</th>      <th>Race_White</th>      <th>...</th>      <th>Marital Status_Single</th>      <th>T Stage</th>      <th>N Stage</th>      <th>6th Stage</th>      <th>differentiate</th>      <th>Grade</th>      <th>A Stage</th>      <th>Estrogen Status</th>      <th>Progesterone Status</th>      <th>intercept</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>-1.253506</td>      <td>1.190528</td>      <td>-0.618095</td>      <td>-0.492900</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>2</td>      <td>2</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>1.0</td>    </tr>    <tr>      <th>1</th>      <td>0.214319</td>      <td>-0.044089</td>      <td>0.164786</td>      <td>-0.405645</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>2</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>1.0</td>    </tr>    <tr>      <th>2</th>      <td>1.540095</td>      <td>-0.044089</td>      <td>0.556227</td>      <td>0.161510</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>2</td>      <td>2</td>      <td>4</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>1.0</td>    </tr>    <tr>      <th>3</th>      <td>-0.590617</td>      <td>-1.525630</td>      <td>-0.618095</td>      <td>0.554156</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>2</td>      <td>2</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>1.0</td>    </tr>    <tr>      <th>4</th>      <td>0.498414</td>      <td>-1.402168</td>      <td>-0.618095</td>      <td>-0.929173</td>      <td>0</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>1</td>      <td>0</td>      <td>1</td>      <td>2</td>      <td>2</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>1.0</td>    </tr>  </tbody></table><p>5 rows × 22 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># # 划分训练数据和测试数据</span><br><span class="hljs-comment"># x_train, y_train = X.iloc[:3001, :], data.iloc[:3001, -1]</span><br><span class="hljs-comment"># x_test,  y_test  = X.iloc[3001:, :], data.iloc[3001:, -1]</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">X.columns<br></code></pre></td></tr></table></figure><pre><code class="hljs">Index(['Tumor Size', 'Regional Node Examined', 'Regional Node Positive',       'Survival Months', 'Age_elderly', 'Age_middle aged', 'Age_thirties',       'Race_Black', 'Race_Other', 'Race_White', 'Marital Status_Married',       'Marital Status_Other', 'Marital Status_Single ', 'T Stage', 'N Stage',       '6th Stage', 'differentiate', 'Grade', 'A Stage', 'Estrogen Status',       'Progesterone Status', 'intercept'],      dtype='object')</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">cols = [<span class="hljs-string">&#x27;Regional Node Examined&#x27;</span>, <span class="hljs-string">&#x27;Regional Node Positive&#x27;</span>,<br>       <span class="hljs-string">&#x27;Age_middle aged&#x27;</span>,<span class="hljs-string">&#x27;Age_elderly&#x27;</span>,<br>       <span class="hljs-string">&#x27;Race_Black&#x27;</span>, <span class="hljs-string">&#x27;Race_Other&#x27;</span>, <br>       <span class="hljs-string">&#x27;Marital Status_Other&#x27;</span>, <span class="hljs-string">&#x27;Marital Status_Single &#x27;</span>, <span class="hljs-string">&#x27;T Stage&#x27;</span>, <span class="hljs-string">&#x27;N Stage&#x27;</span>,<br>       <span class="hljs-string">&#x27;Grade&#x27;</span>, <span class="hljs-string">&#x27;Estrogen Status&#x27;</span>,<br>       <span class="hljs-string">&#x27;Progesterone Status&#x27;</span>, <span class="hljs-string">&#x27;intercept&#x27;</span>]<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> statsmodels.api <span class="hljs-keyword">as</span> sm<br><span class="hljs-keyword">import</span> statsmodels.formula.api <span class="hljs-keyword">as</span> smf<br><br><span class="hljs-comment"># model = sm.Logit(y_train, x_train[cols]).fit()</span><br>model = sm.Logit(data.iloc[:, -<span class="hljs-number">1</span>], X[cols]).fit()<br><br>model.summary()    <span class="hljs-comment"># Logit分析结果</span><br></code></pre></td></tr></table></figure><pre><code class="hljs">Optimization terminated successfully.         Current function value: 0.369082         Iterations 7</code></pre><table class="simpletable"><caption>Logit Regression Results</caption><tr>  <th>Dep. Variable:</th>        <td>Status</td>      <th>  No. Observations:  </th>  <td>  4024</td>  </tr><tr>  <th>Model:</th>                 <td>Logit</td>      <th>  Df Residuals:      </th>  <td>  4010</td>  </tr><tr>  <th>Method:</th>                 <td>MLE</td>       <th>  Df Model:          </th>  <td>    13</td>  </tr><tr>  <th>Date:</th>            <td>Thu, 24 Nov 2022</td> <th>  Pseudo R-squ.:     </th>  <td>0.1377</td>  </tr><tr>  <th>Time:</th>                <td>20:48:45</td>     <th>  Log-Likelihood:    </th> <td> -1485.2</td> </tr><tr>  <th>converged:</th>             <td>True</td>       <th>  LL-Null:           </th> <td> -1722.3</td> </tr><tr>  <th>Covariance Type:</th>     <td>nonrobust</td>    <th>  LLR p-value:       </th> <td>4.157e-93</td></tr></table><table class="simpletable"><tr>             <td></td>               <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  </tr><tr>  <th>Regional Node Examined</th> <td>   -0.2905</td> <td>    0.058</td> <td>   -5.013</td> <td> 0.000</td> <td>   -0.404</td> <td>   -0.177</td></tr><tr>  <th>Regional Node Positive</th> <td>    0.3761</td> <td>    0.073</td> <td>    5.151</td> <td> 0.000</td> <td>    0.233</td> <td>    0.519</td></tr><tr>  <th>Age_middle aged</th>        <td>   -0.4149</td> <td>    0.205</td> <td>   -2.026</td> <td> 0.043</td> <td>   -0.816</td> <td>   -0.013</td></tr><tr>  <th>Age_elderly</th>            <td>   -0.0760</td> <td>    0.191</td> <td>   -0.397</td> <td> 0.691</td> <td>   -0.451</td> <td>    0.299</td></tr><tr>  <th>Race_Black</th>             <td>    0.5069</td> <td>    0.161</td> <td>    3.157</td> <td> 0.002</td> <td>    0.192</td> <td>    0.822</td></tr><tr>  <th>Race_Other</th>             <td>   -0.4521</td> <td>    0.202</td> <td>   -2.242</td> <td> 0.025</td> <td>   -0.847</td> <td>   -0.057</td></tr><tr>  <th>Marital Status_Other</th>   <td>    0.3056</td> <td>    0.117</td> <td>    2.602</td> <td> 0.009</td> <td>    0.075</td> <td>    0.536</td></tr><tr>  <th>Marital Status_Single </th> <td>    0.1097</td> <td>    0.134</td> <td>    0.819</td> <td> 0.413</td> <td>   -0.153</td> <td>    0.372</td></tr><tr>  <th>T Stage</th>                <td>    0.3083</td> <td>    0.061</td> <td>    5.083</td> <td> 0.000</td> <td>    0.189</td> <td>    0.427</td></tr><tr>  <th>N Stage</th>                <td>    0.3467</td> <td>    0.106</td> <td>    3.256</td> <td> 0.001</td> <td>    0.138</td> <td>    0.555</td></tr><tr>  <th>Grade</th>                  <td>    0.4238</td> <td>    0.079</td> <td>    5.383</td> <td> 0.000</td> <td>    0.270</td> <td>    0.578</td></tr><tr>  <th>Estrogen Status</th>        <td>   -0.7030</td> <td>    0.176</td> <td>   -3.998</td> <td> 0.000</td> <td>   -1.048</td> <td>   -0.358</td></tr><tr>  <th>Progesterone Status</th>    <td>   -0.5845</td> <td>    0.127</td> <td>   -4.602</td> <td> 0.000</td> <td>   -0.833</td> <td>   -0.336</td></tr><tr>  <th>intercept</th>              <td>   -1.6366</td> <td>    0.272</td> <td>   -6.027</td> <td> 0.000</td> <td>   -2.169</td> <td>   -1.104</td></tr></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># OR值 和 95%置信区间</span><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br>params = np.exp(model.params)<br>conf = np.exp(model.conf_int())<br>conf[<span class="hljs-string">&#x27;OR&#x27;</span>] = params<br>conf.columns = [<span class="hljs-string">&#x27;2.5%&#x27;</span>,<span class="hljs-string">&#x27;97.5%&#x27;</span>,<span class="hljs-string">&#x27;OR&#x27;</span>]<br>conf<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>2.5%</th>      <th>97.5%</th>      <th>OR</th>    </tr>  </thead>  <tbody>    <tr>      <th>Regional Node Examined</th>      <td>0.667605</td>      <td>0.837845</td>      <td>0.747896</td>    </tr>    <tr>      <th>Regional Node Positive</th>      <td>1.262375</td>      <td>1.680761</td>      <td>1.456623</td>    </tr>    <tr>      <th>Age_middle aged</th>      <td>0.442022</td>      <td>0.986634</td>      <td>0.660389</td>    </tr>    <tr>      <th>Age_elderly</th>      <td>0.637089</td>      <td>1.348257</td>      <td>0.926801</td>    </tr>    <tr>      <th>Race_Black</th>      <td>1.211877</td>      <td>2.274171</td>      <td>1.660125</td>    </tr>    <tr>      <th>Race_Other</th>      <td>0.428512</td>      <td>0.944778</td>      <td>0.636277</td>    </tr>    <tr>      <th>Marital Status_Other</th>      <td>1.078346</td>      <td>1.708693</td>      <td>1.357410</td>    </tr>    <tr>      <th>Marital Status_Single</th>      <td>0.858255</td>      <td>1.451147</td>      <td>1.115999</td>    </tr>    <tr>      <th>T Stage</th>      <td>1.208529</td>      <td>1.532885</td>      <td>1.361079</td>    </tr>    <tr>      <th>N Stage</th>      <td>1.147983</td>      <td>1.742592</td>      <td>1.414378</td>    </tr>    <tr>      <th>Grade</th>      <td>1.309329</td>      <td>1.782662</td>      <td>1.527773</td>    </tr>    <tr>      <th>Estrogen Status</th>      <td>0.350761</td>      <td>0.698828</td>      <td>0.495098</td>    </tr>    <tr>      <th>Progesterone Status</th>      <td>0.434554</td>      <td>0.714957</td>      <td>0.557393</td>    </tr>    <tr>      <th>intercept</th>      <td>0.114312</td>      <td>0.331415</td>      <td>0.194640</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python">fig, ax = plt.subplots(figsize=(<span class="hljs-number">6</span>,<span class="hljs-number">5</span>))<br><br><span class="hljs-keyword">for</span> d,c <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(conf.index, conf.values):<br>    <span class="hljs-keyword">if</span> d <span class="hljs-keyword">in</span> [<span class="hljs-string">&#x27;intercept&#x27;</span>,<span class="hljs-string">&#x27;Age_elderly&#x27;</span>,<span class="hljs-string">&#x27;Marital Status_Single &#x27;</span>]:<br>        plt.plot([c[<span class="hljs-number">0</span>],c[<span class="hljs-number">1</span>]],[d,d],<span class="hljs-string">&#x27;-&#x27;</span>,<span class="hljs-number">0.25</span>, color=<span class="hljs-string">&#x27;gray&#x27;</span>,alpha=<span class="hljs-number">0.3</span>)<br>        plt.plot(c[<span class="hljs-number">2</span>],d, <span class="hljs-string">&#x27;s&#x27;</span>,<span class="hljs-number">0.25</span>, color=<span class="hljs-string">&#x27;gray&#x27;</span>,alpha=<span class="hljs-number">0.3</span>)<br>    <span class="hljs-keyword">else</span>:<br>        plt.plot([c[<span class="hljs-number">0</span>],c[<span class="hljs-number">1</span>]],[d,d],<span class="hljs-string">&#x27;-&#x27;</span>,<span class="hljs-number">0.25</span>, color=<span class="hljs-string">&#x27;black&#x27;</span>)<br>        plt.plot(c[<span class="hljs-number">2</span>],d, <span class="hljs-string">&#x27;s&#x27;</span>,<span class="hljs-number">0.25</span>, color=<span class="hljs-string">&#x27;black&#x27;</span>)<br><br>plt.axvline(<span class="hljs-number">1</span>, linestyle=<span class="hljs-string">&#x27;--&#x27;</span>,color=<span class="hljs-string">&#x27;grey&#x27;</span>,linewidth=<span class="hljs-number">1</span>)<br><br>ax.tick_params(bottom=<span class="hljs-literal">True</span>, labelbottom=<span class="hljs-literal">True</span>, top=<span class="hljs-literal">False</span>, labeltop=<span class="hljs-literal">False</span>,left=<span class="hljs-literal">False</span>) <br>ax.spines[<span class="hljs-string">&#x27;top&#x27;</span>].set_visible(<span class="hljs-literal">False</span>)<br>ax.spines[<span class="hljs-string">&#x27;right&#x27;</span>].set_visible(<span class="hljs-literal">False</span>)<br>ax.spines[<span class="hljs-string">&#x27;left&#x27;</span>].set_visible(<span class="hljs-literal">False</span>)<br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_77_0.png" alt=" " /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sklearn.metrics <span class="hljs-keyword">import</span> roc_curve, auc<br><br><span class="hljs-comment"># 测试集分类预测</span><br><span class="hljs-comment"># resu = model.predict(x_test[cols])</span><br><span class="hljs-comment"># fpr, tpr, threshold = roc_curve(y_test, resu)</span><br><br>resu = model.predict(X[cols])<br>fpr, tpr, threshold = roc_curve(data.iloc[:,-<span class="hljs-number">1</span>], resu)<br><br><span class="hljs-comment">#计算ROC，并绘制曲线</span><br>rocauc = auc(fpr, tpr)<br>plt.plot(fpr, tpr, <span class="hljs-string">&#x27;r&#x27;</span>, label=<span class="hljs-string">&#x27;AUC = %0.2f&#x27;</span> % rocauc)<br>plt.plot([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>], color=<span class="hljs-string">&#x27;grey&#x27;</span>,linestyle=<span class="hljs-string">&#x27;--&#x27;</span>)<br>plt.xlim([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>])<br>plt.ylim([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>])<br>plt.ylabel(<span class="hljs-string">&#x27;True rate&#x27;</span>)<br>plt.xlabel(<span class="hljs-string">&#x27;False rate&#x27;</span>)<br>plt.legend(loc=<span class="hljs-string">&#x27;lower right&#x27;</span>)<br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_78_0.png" alt=" " /></p>]]></content>
    
    
    <categories>
      
      <category>数据分析</category>
      
      <category>编程语言</category>
      
      <category>Python</category>
      
      <category>Logit回归</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Logit回归</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>蒙特卡洛模拟</title>
    <link href="/2022/11/24/%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E6%A8%A1%E6%8B%9F/"/>
    <url>/2022/11/24/%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E6%A8%A1%E6%8B%9F/</url>
    
    <content type="html"><![CDATA[<p>本文利用Python实现蒙特卡洛算法计算圆周率。</p><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">from</span> numpy <span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> seaborn <span class="hljs-keyword">as</span> sns<br><br><span class="hljs-comment"># %matplotlib inline   </span><br><span class="hljs-comment"># %config InlineBackend.figure_format = &#x27;retina&#x27; </span><br><span class="hljs-comment"># plt.rcParams[&#x27;font.sans-serif&#x27;] = [&#x27;Times New Roman&#x27;]   </span><br><span class="hljs-comment"># plt.rcParams[&#x27;axes.unicode_minus&#x27;] = False  </span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">random.seed(<span class="hljs-number">2020</span>)    <span class="hljs-comment"># 设置随机数种子，目的是复现数据点</span><br>scatters = random.uniform(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,(<span class="hljs-number">500000</span>,<span class="hljs-number">2</span>))    <span class="hljs-comment"># 在区间[0,1]内随机生成50万对数据点</span><br>scatters = pd.DataFrame(scatters,columns=[<span class="hljs-string">&#x27;x&#x27;</span>,<span class="hljs-string">&#x27;y&#x27;</span>])    <span class="hljs-comment"># 转换为DataFrame格式方便后续操作</span><br><br><span class="hljs-comment"># 生成新的数据列并判断每对数据点是否在圆心为(0,0)半径r=1的园内</span><br>scatters[<span class="hljs-string">&#x27;incircle&#x27;</span>] = (scatters[<span class="hljs-string">&#x27;x&#x27;</span>]**<span class="hljs-number">2</span> + scatters[<span class="hljs-string">&#x27;y&#x27;</span>]**<span class="hljs-number">2</span> &lt;= <span class="hljs-number">1</span>)    <br>scatters.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>x</th>      <th>y</th>      <th>incircle</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>0.986277</td>      <td>0.873392</td>      <td>False</td>    </tr>    <tr>      <th>1</th>      <td>0.509746</td>      <td>0.271836</td>      <td>True</td>    </tr>    <tr>      <th>2</th>      <td>0.336919</td>      <td>0.216954</td>      <td>True</td>    </tr>    <tr>      <th>3</th>      <td>0.276477</td>      <td>0.343316</td>      <td>True</td>    </tr>    <tr>      <th>4</th>      <td>0.862159</td>      <td>0.156700</td>      <td>True</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 可视化模拟结果</span><br>fig, axes = plt.subplots(figsize=(<span class="hljs-number">5</span>,<span class="hljs-number">5</span>))<br>sns.scatterplot(data=scatters, x=<span class="hljs-string">&#x27;x&#x27;</span>, y=<span class="hljs-string">&#x27;y&#x27;</span>, palette=<span class="hljs-string">&#x27;Reds&#x27;</span>, hue=<span class="hljs-string">&#x27;incircle&#x27;</span>, s=<span class="hljs-number">0.5</span>, alpha=<span class="hljs-number">0.6</span>, legend=<span class="hljs-literal">False</span>, ax=axes)<br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="/img/%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E6%A8%A1%E6%8B%9F/output_2_0.png" alt="" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 计算圆周率，Π/4 = 落在园内点的数量/总数据点数量</span><br>a_quarter_pi = <span class="hljs-built_in">sum</span>(scatters[<span class="hljs-string">&#x27;incircle&#x27;</span>])/<span class="hljs-built_in">len</span>(scatters[<span class="hljs-string">&#x27;incircle&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;圆周率约等于&#x27;</span>,a_quarter_pi*<span class="hljs-number">4</span>)<br></code></pre></td></tr></table></figure><pre><code class="hljs">圆周率约等于 3.146984</code></pre>]]></content>
    
    
    <categories>
      
      <category>编程语言</category>
      
      <category>Python</category>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>蒙特卡洛算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python 快速入门（一）</title>
    <link href="/2022/11/17/Python%20%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2022/11/17/Python%20%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>本文为Python 快速入门系列第一篇。如果你希望学习Python语言的更多特性请参阅 <a href="https://docs.python.org/zh-cn/3/tutorial/">官网指南</a> 或 <a href="http://openbookproject.net/thinkcs/python/english3e/">如何像计算机科学家一样思考：使用 Python 3 学习</a></p><span id="more"></span><h3 id="一-赋值语句"><a class="markdownIt-Anchor" href="#一-赋值语句"></a> 一、赋值语句</h3><p>语法：<strong>变量名 = 变量值</strong><br />例：<br /><strong>X = 3</strong><br /><strong>Y = 12</strong><br /><strong>name = ‘Lihua’</strong></p><h4 id="变量命名规则"><a class="markdownIt-Anchor" href="#变量命名规则"></a> 变量命名规则</h4><ol><li>允许包含字母、数字和下划线</li><li>不允许以数字开头</li><li>不允许有特殊字符（下划线除外）</li><li>不允许有空格</li></ol><table><thead><tr><th style="text-align:left">有效变量名</th><th style="text-align:left">无效变量名</th></tr></thead><tbody><tr><td style="text-align:left">your_name</td><td style="text-align:left">your-name</td></tr><tr><td style="text-align:left">student1</td><td style="text-align:left">1student</td></tr><tr><td style="text-align:left">…</td><td style="text-align:left">…</td></tr></tbody></table><h3 id="二-输入和输出"><a class="markdownIt-Anchor" href="#二-输入和输出"></a> 二、输入和输出</h3><h4 id="print函数"><a class="markdownIt-Anchor" href="#print函数"></a> print()函数</h4><p>将括号中的内容以字符串的形式显示输出</p><h4 id="input函数"><a class="markdownIt-Anchor" href="#input函数"></a> input()函数</h4><p>获取用户的输入内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Hello world!&#x27;</span>)   <span class="hljs-comment"># 输出 HellO world</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;你好！&#x27;</span>)         <span class="hljs-comment"># 输出 你好！</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">1</span>+<span class="hljs-number">1</span>)             <span class="hljs-comment"># 输出 1+1的计算结果 2</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>)             <span class="hljs-comment"># 输出 空字符串</span><br></code></pre></td></tr></table></figure><pre><code class="hljs">Hello world!你好！2</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">myName = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入你的名字：&#x27;</span>)     <span class="hljs-comment"># 获取用户输入的内容并赋值给变量myName</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;你好！&#x27;</span>, myName)                        <span class="hljs-comment"># 同时输出字符串&#x27;你好！&#x27;和变量myName的值</span><br></code></pre></td></tr></table></figure><pre><code class="hljs">请输入你的名字：东木子你好！ 东木子</code></pre><h3 id="三-数学操作符"><a class="markdownIt-Anchor" href="#三-数学操作符"></a> 三、数学操作符</h3><table><thead><tr><th style="text-align:left">操作符</th><th style="text-align:left">操作</th><th style="text-align:left">例子</th></tr></thead><tbody><tr><td style="text-align:left">**</td><td style="text-align:left">指数/幂</td><td style="text-align:left">7**3</td></tr><tr><td style="text-align:left">%</td><td style="text-align:left">取模/余数</td><td style="text-align:left">7%3</td></tr><tr><td style="text-align:left">//</td><td style="text-align:left">整除</td><td style="text-align:left">7//3</td></tr><tr><td style="text-align:left">/</td><td style="text-align:left">除法</td><td style="text-align:left">7/3</td></tr><tr><td style="text-align:left">*</td><td style="text-align:left">乘法</td><td style="text-align:left">7*3</td></tr><tr><td style="text-align:left">-</td><td style="text-align:left">减法</td><td style="text-align:left">7-3</td></tr><tr><td style="text-align:left">+</td><td style="text-align:left">加法</td><td style="text-align:left">7+3</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-number">7</span><br>b = <span class="hljs-number">3</span><br><br><span class="hljs-built_in">print</span>(a**b)<br><span class="hljs-built_in">print</span>(a%b)<br><span class="hljs-built_in">print</span>(a//b)<br><span class="hljs-built_in">print</span>(a/b)<br><span class="hljs-built_in">print</span>(a*b)<br><span class="hljs-built_in">print</span>(a-b)<br><span class="hljs-built_in">print</span>(a+b)<br><br>c = a + b   <span class="hljs-comment"># 计算a+b的值并赋值给c</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;c =&#x27;</span>,c)<br></code></pre></td></tr></table></figure><pre><code class="hljs">343122.333333333333333521410c = 10</code></pre><h3 id="四-数据类型"><a class="markdownIt-Anchor" href="#四-数据类型"></a> 四、数据类型</h3><table><thead><tr><th style="text-align:left">数据类型</th><th style="text-align:left">例子</th></tr></thead><tbody><tr><td style="text-align:left">整型</td><td style="text-align:left">-2, -1, 0, 1, 2, 3</td></tr><tr><td style="text-align:left">浮点型</td><td style="text-align:left">-1.25, -1.0, 0.0, 1.0, 1.75</td></tr><tr><td style="text-align:left">字符串</td><td style="text-align:left">‘a’, ‘abc’, ‘你好!’, ‘Hello!’, ‘123’</td></tr><tr><td style="text-align:left">布尔值</td><td style="text-align:left">True, False, true, false</td></tr></tbody></table><h4 id="int函数-将变量转换为整型变量向下取整"><a class="markdownIt-Anchor" href="#int函数-将变量转换为整型变量向下取整"></a> int()函数: 将变量转换为整型变量(向下取整)</h4><h4 id="float函数将变量转换为浮点型变量"><a class="markdownIt-Anchor" href="#float函数将变量转换为浮点型变量"></a> float()函数：将变量转换为浮点型变量</h4><h4 id="str函数将变量转换为字符串"><a class="markdownIt-Anchor" href="#str函数将变量转换为字符串"></a> str()函数：将变量转换为字符串</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python">afloat = <span class="hljs-number">3.73</span><br>aint = <span class="hljs-number">5</span><br>astr = <span class="hljs-string">&#x27;32&#x27;</span><br><br>flaot_int = <span class="hljs-built_in">int</span>(afloat)  <span class="hljs-comment"># 将浮点型变量afloat的值转换为整型数据并赋值给变量flaot_int</span><br>str_int = <span class="hljs-built_in">int</span>(astr)      <span class="hljs-comment"># 将字符串变量astr的值转换为整型数据并赋值给变量str_int</span><br><br>int_float = <span class="hljs-built_in">float</span>(aint)      <span class="hljs-comment"># 将整型变量aint的值转换为浮点型数据并赋值给变量int_float</span><br>str_float = <span class="hljs-built_in">float</span>(astr)      <span class="hljs-comment"># 将字符串变量astr的值转换为浮点型数据并赋值给变量str_float</span><br><br>int_str = <span class="hljs-built_in">str</span>(aint)      <span class="hljs-comment"># 将整型变量aint的值转换为字符串并赋值给变量int_str</span><br>float_str = <span class="hljs-built_in">str</span>(afloat)      <span class="hljs-comment"># 将浮点型变量afloat的值转换为字符串并赋值给变量float_str</span><br><br><br><br><span class="hljs-built_in">print</span>(afloat, <span class="hljs-string">&#x27;浮点型转整型为:&#x27;</span>,flaot_int)<br><span class="hljs-built_in">print</span>(astr,<span class="hljs-string">&#x27;字符串转整型为:&#x27;</span>,str_int)<br><br><span class="hljs-built_in">print</span>(aint, <span class="hljs-string">&#x27;整型转浮点型型为:&#x27;</span>,int_float)<br><span class="hljs-built_in">print</span>(astr,<span class="hljs-string">&#x27;字符串转浮点型为:&#x27;</span>,str_float)<br><br><span class="hljs-built_in">print</span>(aint, <span class="hljs-string">&#x27;整型转字符串为:&#x27;</span>,int_str)<br><span class="hljs-built_in">print</span>(afloat,<span class="hljs-string">&#x27;浮点型转字符串为:&#x27;</span>,float_str)<br></code></pre></td></tr></table></figure><pre><code class="hljs">3.73 浮点型转整型为: 332 字符串转整型为: 325 整型转浮点型型为: 5.032 字符串转浮点型为: 32.05 整型转字符串为: 53.73 浮点型转字符串为: 3.73</code></pre><h3 id="五-字符串拼接"><a class="markdownIt-Anchor" href="#五-字符串拼接"></a> 五、字符串拼接</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">string1 = <span class="hljs-string">&#x27;abc&#x27;</span><br>string2 = <span class="hljs-string">&#x27;cde&#x27;</span><br>string3 = <span class="hljs-string">&#x27;abc&#x27;</span> + <span class="hljs-string">&#x27;cde&#x27;</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;string1+string2 =&#x27;</span>,string1+string2)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;string3 =&#x27;</span>,string3)<br></code></pre></td></tr></table></figure><pre><code class="hljs">string1+string2 = abccdestring3 = abccde</code></pre><h3 id="六-布尔运算"><a class="markdownIt-Anchor" href="#六-布尔运算"></a> 六、布尔运算</h3><table><thead><tr><th style="text-align:left">操作符</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">==</td><td style="text-align:left">等于</td></tr><tr><td style="text-align:left">!=</td><td style="text-align:left">不等于</td></tr><tr><td style="text-align:left">&lt;</td><td style="text-align:left">小于</td></tr><tr><td style="text-align:left">&gt;</td><td style="text-align:left">大于</td></tr><tr><td style="text-align:left">&lt;=</td><td style="text-align:left">小于等于</td></tr><tr><td style="text-align:left">&gt;=</td><td style="text-align:left">大于等于</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-number">16</span><br>b = <span class="hljs-number">78</span><br>c = <span class="hljs-number">16</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;a =&#x27;</span>,a)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;b =&#x27;</span>,b)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;c =&#x27;</span>,c)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;a等于b：&#x27;</span>,a==b)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;c等于a：&#x27;</span>,a==c)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;a小于b：&#x27;</span>,a&lt;b)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;c大于等于b：&#x27;</span>,c&gt;=b)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>)<br><br><span class="hljs-comment"># and, or, not操作符&#x27;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;a等于b或者a等于c：&#x27;</span>, (a==b <span class="hljs-keyword">or</span> a==c))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;c等于a并且c大于b：&#x27;</span>, (a==c <span class="hljs-keyword">and</span> c&gt;b))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;not a小于b：&#x27;</span>, (<span class="hljs-keyword">not</span> a&lt;b))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;not c大于等于b：&#x27;</span>, (<span class="hljs-keyword">not</span> c&gt;=b))<br></code></pre></td></tr></table></figure><pre><code class="hljs">a = 16b = 78c = 16a等于b： Falsec等于a： Truea小于b： Truec大于等于b： Falsea等于b或者a等于c： Truec等于a并且c大于b： Falsenot a小于b： Falsenot c大于等于b： True</code></pre><h3 id="控制流-if语句"><a class="markdownIt-Anchor" href="#控制流-if语句"></a> 控制流 if语句</h3><p>如果条件为真则执行子句的代码，否则跳过子句中的代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 例1：给定一个输入，若为Hello！，则结果输出 Hi！，否则无结果输出。</span><br>greet = <span class="hljs-built_in">input</span>()<br><span class="hljs-keyword">if</span> greet==<span class="hljs-string">&#x27;Hello!&#x27;</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Hi!&#x27;</span>)<br></code></pre></td></tr></table></figure><pre><code class="hljs">Hello!Hi!</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 例2：给定一个输入，若为Hello！，则结果输出 Hi！，否则输出&#x27;噢&#x27;。</span><br>greet = <span class="hljs-built_in">input</span>()<br><span class="hljs-keyword">if</span> greet==<span class="hljs-string">&#x27;Hello!&#x27;</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Hi!&#x27;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;噢&#x27;</span>)<br></code></pre></td></tr></table></figure><pre><code class="hljs">你好！噢</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 例3：给定一个输入，若为Hello！，则结果输出 Hi！，如果为&#x27;你好!&#x27;，则输出&#x27;你好呀！&#x27;，否则输出&#x27;噢&#x27;。</span><br>greet = <span class="hljs-built_in">input</span>()<br><span class="hljs-keyword">if</span> greet==<span class="hljs-string">&#x27;Hello!&#x27;</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Hi!&#x27;</span>)<br><span class="hljs-keyword">elif</span> greet==<span class="hljs-string">&#x27;你好！&#x27;</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;你好呀！&#x27;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;噢&#x27;</span>)<br></code></pre></td></tr></table></figure><pre><code class="hljs">你好！你好呀！</code></pre><h3 id="习题根据利润计算奖金"><a class="markdownIt-Anchor" href="#习题根据利润计算奖金"></a> 习题：根据利润计算奖金</h3><p><strong>输入利润值，结果输出应发放奖金的值。</strong><br />企业发放的奖金根据利润提成。利润 (I) :</p><ul><li>低于或等于 10 万元时，奖金可提 10%;</li><li>高于 10 万元，低于 20 万元时，低于 10 万元的部分按 10%提成，高于 10 万元的部分，可提成 7.5%;</li><li>20 万到 40 万之间时，高于20 万元的部分，可提成 5%;</li><li>40 万到 60 万之间时，高于40 万元的部分，可提成 3%;</li><li>60 万到 100 万之间时，高于60 万元的部分，可提成1.5%；</li><li>高于 100万元时，超过 100 万元的部分按 1%提成。</li></ul><p>提示：</p><ul><li>输入值默认为字符串，需要经过整型或浮点型转换才能作为数值进行计算。</li><li>浮点数输入 float(input())</li><li>整数输入 int(input())</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python">profit = <span class="hljs-built_in">float</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入利润：&#x27;</span>))<br><br><span class="hljs-keyword">if</span> profit&lt;=<span class="hljs-number">100000</span>:<br>    bonus = profit*<span class="hljs-number">0.1</span><br><span class="hljs-keyword">elif</span> profit&lt;=<span class="hljs-number">200000</span>:<br>    bonus = <span class="hljs-number">10000</span>+(profit-<span class="hljs-number">100000</span>)*<span class="hljs-number">0.075</span><br><span class="hljs-keyword">elif</span> profit&lt;=<span class="hljs-number">400000</span>:<br>    bonus = <span class="hljs-number">10000</span>+<span class="hljs-number">7500</span>+(profit-<span class="hljs-number">200000</span>)*<span class="hljs-number">0.05</span><br><span class="hljs-keyword">elif</span> profit&lt;=<span class="hljs-number">600000</span>:<br>    bonus = <span class="hljs-number">10000</span>+<span class="hljs-number">7500</span>+<span class="hljs-number">10000</span>+(profit-<span class="hljs-number">400000</span>)*<span class="hljs-number">0.03</span><br><span class="hljs-keyword">elif</span> profit&lt;=<span class="hljs-number">1000000</span>:<br>    bonus = <span class="hljs-number">10000</span>+<span class="hljs-number">7500</span>+<span class="hljs-number">10000</span>+<span class="hljs-number">6000</span>+(profit-<span class="hljs-number">600000</span>)*<span class="hljs-number">0.015</span><br><span class="hljs-keyword">elif</span> profit&gt;<span class="hljs-number">1000000</span>:<br>    bonus = <span class="hljs-number">10000</span>+<span class="hljs-number">7500</span>+<span class="hljs-number">10000</span>+<span class="hljs-number">6000</span>+<span class="hljs-number">6000</span>+(profit-<span class="hljs-number">1000000</span>)*<span class="hljs-number">0.01</span><br><span class="hljs-keyword">else</span>:<br>    bonus = <span class="hljs-number">0</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;应发放奖金：&#x27;</span>,bonus)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程语言</category>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown常用语法</title>
    <link href="/2022/11/15/markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
    <url>/2022/11/15/markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>本文整理了常用 Markdown 语法元素。如果你想了解语法元素的更多信息，请参阅更详细的 <a href="https://markdown.com.cn/basic-syntax/">基本语法</a> 和 <a href="https://markdown.com.cn/extended-syntax/">扩展语法</a>。</p><span id="more"></span><h3 id="标题（Heading）">标题（Heading）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Markdown"><span class="hljs-section"># H1</span><br><span class="hljs-section">## H2</span><br><span class="hljs-section">### H3</span><br></code></pre></td></tr></table></figure><h3 id="粗体（Bold）与-斜体（Italic）">粗体（Bold）与 斜体（Italic）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Markdown"><span class="hljs-strong">**粗体**</span><br><span class="hljs-emphasis">*斜体*</span><br><span class="hljs-strong">**<span class="hljs-emphasis">*斜体加粗*</span>**</span><br></code></pre></td></tr></table></figure><p><strong>粗体</strong><br><em>斜体</em><br><em><strong>斜体加粗</strong></em></p><h3 id="删除线（Strikethtough）">删除线（Strikethtough）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Markdown">~~这是一条删除线~~<br></code></pre></td></tr></table></figure><p><s>这是一条删除线</s></p><h3 id="引用块（Blockquote）">引用块（Blockquote）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Markdown"><span class="hljs-quote">&gt; 引用块</span><br></code></pre></td></tr></table></figure><blockquote><p>引用块</p></blockquote><h3 id="链接（Link）">链接（Link）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Markdown">[<span class="hljs-string">B站</span>](<span class="hljs-link">https://www.bilibili.com/</span>)<br></code></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/">B站</a></p><h3 id="图片（Image）">图片（Image）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Markdown">![<span class="hljs-string">road</span>](<span class="hljs-link">/img/road.jpg</span>)<br></code></pre></td></tr></table></figure><p><img src="/img/road.jpg" alt="road"></p><h3 id="脚注（Footnote）">脚注（Footnote）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Markdown">Markdown 是一种轻量级的标记语言，可用于在纯文本文档中添加格式化元素。 [^1]<br>[<span class="hljs-symbol">^1</span>]: <span class="hljs-link">Markdown官方教程https://markdown.com.cn/intro.html</span><br></code></pre></td></tr></table></figure><p>Markdown 是一种轻量级的标记语言，可用于在纯文本文档中添加格式化元素。 [^1]<br>[^1]: Markdown官方教程https://markdown.com.cn/intro.html</p><h3 id="分隔线（Horizontal-Rule）">分隔线（Horizontal Rule）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Markdown">---<br></code></pre></td></tr></table></figure><hr><h3 id="代码（code）">代码（code）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Markdown"><span class="hljs-code">`code`</span><br></code></pre></td></tr></table></figure><p><code>code</code></p><h3 id="代码块（Fenced-Code-Block）">代码块（Fenced Code Block）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs Markdown"><span class="hljs-code">```python</span><br><span class="hljs-code">class Solution:</span><br><span class="hljs-code">    def twoSum(self, nums, target):</span><br><span class="hljs-code">        n = len(nums)</span><br><span class="hljs-code">        for i in range(n):</span><br><span class="hljs-code">            for j in range(i + 1, n):</span><br><span class="hljs-code">                if nums[i] + nums[j] == target:</span><br><span class="hljs-code">                    return [i, j]</span><br><span class="hljs-code">        return []</span><br><span class="hljs-code">```</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">twoSum</span>(<span class="hljs-params">self, nums, target</span>):<br>        n = <span class="hljs-built_in">len</span>(nums)<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i + <span class="hljs-number">1</span>, n):<br>                <span class="hljs-keyword">if</span> nums[i] + nums[j] == target:<br>                    <span class="hljs-keyword">return</span> [i, j]<br>        <span class="hljs-keyword">return</span> []<br></code></pre></td></tr></table></figure><h3 id="表格（Table）">表格（Table）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Markdown">| Syntax      | Description |<br>| ----------- | ----------- |<br>| Header      | Title       |<br>| Paragraph   | Text        |<br></code></pre></td></tr></table></figure><table><thead><tr><th>Syntax</th><th>Description</th></tr></thead><tbody><tr><td>Header</td><td>Title</td></tr><tr><td>Paragraph</td><td>Text</td></tr></tbody></table><h3 id="有序列表（Ordered-List）">有序列表（Ordered List）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Markdown"><span class="hljs-bullet">1.</span> 事项一<br><span class="hljs-bullet">2.</span> 事项二<br><span class="hljs-bullet">3.</span> 事项三<br></code></pre></td></tr></table></figure><ol><li>事项一</li><li>事项二</li><li>事项三</li></ol><h3 id="无序列表（Unordered-List）">无序列表（Unordered List）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Markdown"><span class="hljs-bullet">-</span> 事项一<br><span class="hljs-bullet">-</span> 事项二<br><span class="hljs-bullet">-</span> 事项三<br></code></pre></td></tr></table></figure><ul><li>事项一</li><li>事项二</li><li>事项三</li></ul><h3 id="定义列表（Definition-List）">定义列表（Definition List）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Markdown">名词<br>: 这是该名词的定义<br></code></pre></td></tr></table></figure><p>名词<br>: 这是该名词的定义</p>]]></content>
    
    
    <categories>
      
      <category>Tips</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
