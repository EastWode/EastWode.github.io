<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>数据分析与可视化</title>
    <link href="/2022/11/15/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    <url>/2022/11/15/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<p>本文展示了利用Python和kaggle数据集完成数据分析的主要流程和方法，更多信息请前往 <a href="https://www.kaggle.com/code/woodeast/logit/notebook">数据可视化与Logit回归分析</a> 获取。</p><span id="more"></span><h2 id="一-数据读取"><a class="markdownIt-Anchor" href="#一-数据读取"></a> 一、数据读取</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd   <span class="hljs-comment">##导入pandas库</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## 从Excel中读取数据</span><br>dataset = pd.read_excel(<span class="hljs-string">&quot;Breast_Cancer.xlsx&quot;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">dataset.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;output_    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Age</th>      <th>Race</th>      <th>Marital Status</th>      <th>T Stage</th>      <th>N Stage</th>      <th>6th Stage</th>      <th>differentiate</th>      <th>Grade</th>      <th>A Stage</th>      <th>Tumor Size</th>      <th>Estrogen Status</th>      <th>Progesterone Status</th>      <th>Regional Node Examined</th>      <th>Reginol Node Positive</th>      <th>Survival Months</th>      <th>Status</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>68</td>      <td>White</td>      <td>Married</td>      <td>T1</td>      <td>N1</td>      <td>IIA</td>      <td>Poorly differentiated</td>      <td>3</td>      <td>Regional</td>      <td>4</td>      <td>Positive</td>      <td>Positive</td>      <td>24</td>      <td>1</td>      <td>60</td>      <td>Alive</td>    </tr>    <tr>      <th>1</th>      <td>50</td>      <td>White</td>      <td>Married</td>      <td>T2</td>      <td>N2</td>      <td>IIIA</td>      <td>Moderately differentiated</td>      <td>2</td>      <td>Regional</td>      <td>35</td>      <td>Positive</td>      <td>Positive</td>      <td>14</td>      <td>5</td>      <td>62</td>      <td>Alive</td>    </tr>    <tr>      <th>2</th>      <td>58</td>      <td>White</td>      <td>Divorced</td>      <td>T3</td>      <td>N3</td>      <td>IIIC</td>      <td>Moderately differentiated</td>      <td>2</td>      <td>Regional</td>      <td>63</td>      <td>Positive</td>      <td>Positive</td>      <td>14</td>      <td>7</td>      <td>75</td>      <td>Alive</td>    </tr>    <tr>      <th>3</th>      <td>58</td>      <td>White</td>      <td>Married</td>      <td>T1</td>      <td>N1</td>      <td>IIA</td>      <td>Poorly differentiated</td>      <td>3</td>      <td>Regional</td>      <td>18</td>      <td>Positive</td>      <td>Positive</td>      <td>2</td>      <td>1</td>      <td>84</td>      <td>Alive</td>    </tr>    <tr>      <th>4</th>      <td>47</td>      <td>White</td>      <td>Married</td>      <td>T2</td>      <td>N1</td>      <td>IIB</td>      <td>Poorly differentiated</td>      <td>3</td>      <td>Regional</td>      <td>41</td>      <td>Positive</td>      <td>Positive</td>      <td>3</td>      <td>1</td>      <td>50</td>      <td>Alive</td>    </tr>  </tbody></table></div><p>######## 特征描述</p><table><thead><tr><th style="text-align:left">特征</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">Age</td><td style="text-align:left">年龄</td></tr><tr><td style="text-align:left">Race</td><td style="text-align:left">种族：白人，黑人，其他（美洲印第安人/阿拉斯加土著、亚洲/太平洋岛民）</td></tr><tr><td style="text-align:left">Marital Status</td><td style="text-align:left">婚姻状况：已婚，单身，离婚，分居，丧偶</td></tr><tr><td style="text-align:left">T Stage</td><td style="text-align:left">T分期：肿瘤直径为依据</td></tr><tr><td style="text-align:left">N Stage</td><td style="text-align:left">N分期：局部淋巴结转移情况为依据</td></tr><tr><td style="text-align:left">6th Stage</td><td style="text-align:left">AJCC第六版分期：原位癌、肿瘤大小、局部淋巴结转移和器官转移等为依据</td></tr><tr><td style="text-align:left">differentiate</td><td style="text-align:left">分化程度: 未分化，低分化，中等分化，高分化</td></tr><tr><td style="text-align:left">Grade</td><td style="text-align:left">等级：高等级意味着癌症增长更快，更容易扩散</td></tr><tr><td style="text-align:left">A Stage</td><td style="text-align:left">A分期： 局部（未转移），远处（转移）</td></tr><tr><td style="text-align:left">Tumor Size</td><td style="text-align:left">肿瘤大小</td></tr><tr><td style="text-align:left">Estrogen Status</td><td style="text-align:left">雌激素状态：ER阳性乳腺癌</td></tr><tr><td style="text-align:left">Progesterone Status</td><td style="text-align:left">孕激素状态：PR阳性乳腺癌</td></tr><tr><td style="text-align:left">Regional Node Examined</td><td style="text-align:left">检查的区域节点：记录病理检查的局部淋巴结总数</td></tr><tr><td style="text-align:left">Regional Node Positive</td><td style="text-align:left">区域节点阳性数：记录检查局部阳性淋巴结的数量</td></tr><tr><td style="text-align:left">Survival Months</td><td style="text-align:left">生存时间（月）</td></tr><tr><td style="text-align:left">Status</td><td style="text-align:left">结局状态：存活，死亡</td></tr></tbody></table><h2 id="二-查看数据详细信息"><a class="markdownIt-Anchor" href="#二-查看数据详细信息"></a> 二、查看数据详细信息</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">dataset.info() <span class="hljs-comment">## 数据整体信息</span><br></code></pre></td></tr></table></figure><pre><code class="hljs">&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 4024 entries, 0 to 4023Data columns (total 16 columns): ##   Column                  Non-Null Count  Dtype ---  ------                  --------------  -----  0   Age                     4024 non-null   int64  1   Race                    4024 non-null   object 2   Marital Status          4024 non-null   object 3   T Stage                 4024 non-null   object 4   N Stage                 4024 non-null   object 5   6th Stage               4024 non-null   object 6   differentiate           4024 non-null   object 7   Grade                   4024 non-null   object 8   A Stage                 4024 non-null   object 9   Tumor Size              4024 non-null   int64  10  Estrogen Status         4024 non-null   object 11  Progesterone Status     4024 non-null   object 12  Regional Node Examined  4024 non-null   int64  13  Reginol Node Positive   4024 non-null   int64  14  Survival Months         4024 non-null   int64  15  Status                  4024 non-null   objectdtypes: int64(5), object(11)memory usage: 503.1+ KB</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">dataset.nunique()   <span class="hljs-comment">## 查看各列的不同值的数量</span><br></code></pre></td></tr></table></figure><pre><code class="hljs">Age                        40Race                        3Marital Status              5T Stage                     4N Stage                     36th Stage                   5differentiate               4Grade                       4A Stage                     2Tumor Size                110Estrogen Status             2Progesterone Status         2Regional Node Examined     54Reginol Node Positive      38Survival Months           107Status                      2dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">dataset[<span class="hljs-string">&#x27;Status&#x27;</span>].value_counts() <span class="hljs-comment">## 查看列的取值</span><br></code></pre></td></tr></table></figure><pre><code class="hljs">Alive    3408Dead      616Name: Status, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">dataset.describe() <span class="hljs-comment">## 定量资料的统计描述</span><br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Age</th>      <th>Tumor Size</th>      <th>Regional Node Examined</th>      <th>Reginol Node Positive</th>      <th>Survival Months</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>4024.000000</td>      <td>4024.000000</td>      <td>4024.000000</td>      <td>4024.000000</td>      <td>4024.000000</td>    </tr>    <tr>      <th>mean</th>      <td>53.972167</td>      <td>30.473658</td>      <td>14.357107</td>      <td>4.158052</td>      <td>71.297962</td>    </tr>    <tr>      <th>std</th>      <td>8.963134</td>      <td>21.119696</td>      <td>8.099675</td>      <td>5.109331</td>      <td>22.921430</td>    </tr>    <tr>      <th>min</th>      <td>30.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>    </tr>    <tr>      <th>25%</th>      <td>47.000000</td>      <td>16.000000</td>      <td>9.000000</td>      <td>1.000000</td>      <td>56.000000</td>    </tr>    <tr>      <th>50%</th>      <td>54.000000</td>      <td>25.000000</td>      <td>14.000000</td>      <td>2.000000</td>      <td>73.000000</td>    </tr>    <tr>      <th>75%</th>      <td>61.000000</td>      <td>38.000000</td>      <td>19.000000</td>      <td>5.000000</td>      <td>90.000000</td>    </tr>    <tr>      <th>max</th>      <td>69.000000</td>      <td>140.000000</td>      <td>61.000000</td>      <td>46.000000</td>      <td>107.000000</td>    </tr>  </tbody></table></div><h2 id="三-数据可视化探索"><a class="markdownIt-Anchor" href="#三-数据可视化探索"></a> 三、数据可视化探索</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> seaborn <span class="hljs-keyword">as</span> sns<br><br>%matplotlib inline   <br>%config InlineBackend.figure_format = <span class="hljs-string">&#x27;retina&#x27;</span> <br><br>plt.rcParams[<span class="hljs-string">&#x27;font.sans-serif&#x27;</span>] = [<span class="hljs-string">&#x27;FangSong&#x27;</span>]    <span class="hljs-comment">## 指定字体，比如FangSong(仿宋)</span><br>plt.rcParams[<span class="hljs-string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="hljs-literal">False</span>    <span class="hljs-comment">## 正常显示符号（-）</span><br></code></pre></td></tr></table></figure><h6 id="绘图基础"><a class="markdownIt-Anchor" href="#绘图基础"></a> 绘图基础</h6><ul><li>画布，坐标系: fig, ax = plt.subplots(nrows, ncols, figsize=(m,n))</li><li>直条图: sns.countplot(data, x, y, hue, ax)</li><li>直方图: sns.histplot(data, x, y, bins, kde, hue, ax)</li><li>散点图: sns.scatterplot(data, x, y, hue, ax)</li><li>箱线图: sns.boxplot(data, x, y, ax)</li><li>热图: sns.heatmap(data, cmap, annot, ax)</li><li>自定义图标题: ax.set_title(label, fontsize)</li><li>自定义横轴名: ax.set_xlabel(label, fontsize)</li><li>自定义纵轴名: ax.set_ylabel(label, fontsize)</li><li>保存图片: plt.savefig(filename, dpi=300, bbox_inches=‘tight’)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">fig1, ax1 = plt.subplots(figsize=(<span class="hljs-number">6</span>,<span class="hljs-number">4</span>))<br>sns.scatterplot(data=dataset, x=<span class="hljs-string">&#x27;Reginol Node Positive&#x27;</span>, y=<span class="hljs-string">&#x27;Survival Months&#x27;</span>, ax=ax1)<br><br>ax1.set_title(<span class="hljs-string">&#x27;淋巴结转移阳性数量与生存时间的散点图&#x27;</span>)<br>ax1.set_xlabel(<span class="hljs-string">&#x27;淋巴结转移阳性数量&#x27;</span>)<br>ax1.set_ylabel(<span class="hljs-string">&#x27;生存时间&#x27;</span>)<br><br>plt.savefig(<span class="hljs-string">&#x27;1.tif&#x27;</span>, dpi=<span class="hljs-number">300</span>, bbox_inches=<span class="hljs-string">&#x27;tight&#x27;</span>)<br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_13_0.png" alt="png" /></p><h4 id="一定性数据可视化探索"><a class="markdownIt-Anchor" href="#一定性数据可视化探索"></a> （一）定性数据可视化探索</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">fig, ax = plt.subplots(nrows=<span class="hljs-number">1</span>, ncols=<span class="hljs-number">2</span>, figsize=(<span class="hljs-number">10</span>,<span class="hljs-number">4</span>))  <br>ax1 = ax[<span class="hljs-number">0</span>]    <span class="hljs-comment">## 坐标系1</span><br>ax2 = ax[<span class="hljs-number">1</span>]    <span class="hljs-comment">## 坐标系2</span><br><br>sns.countplot(data=dataset, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, ax=ax1, x=<span class="hljs-string">&#x27;Race&#x27;</span>,    )<br>sns.countplot(data=dataset, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, ax=ax2, x=<span class="hljs-string">&#x27;Marital Status&#x27;</span>,)<br><br>plt.tight_layout() <span class="hljs-comment">## 自适应排版</span><br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_15_0.png" alt="png" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">fig, ax = plt.subplots(nrows=<span class="hljs-number">1</span>, ncols=<span class="hljs-number">2</span>, figsize=(<span class="hljs-number">10</span>,<span class="hljs-number">4</span>))  <br>ax1 = ax[<span class="hljs-number">0</span>]    <span class="hljs-comment">## 坐标系1</span><br>ax2 = ax[<span class="hljs-number">1</span>]    <span class="hljs-comment">## 坐标系2</span><br><br>sns.countplot(data=dataset, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, ax=ax1, x=<span class="hljs-string">&#x27;Estrogen Status&#x27;</span>,    )<br>sns.countplot(data=dataset, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, ax=ax2, x=<span class="hljs-string">&#x27;Progesterone Status&#x27;</span>,)<br><br>plt.tight_layout() <span class="hljs-comment">## 自适应排版</span><br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_16_0.png" alt="png" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python">fig, axes = plt.subplots(nrows=<span class="hljs-number">2</span>, ncols=<span class="hljs-number">3</span>, figsize=(<span class="hljs-number">14</span>,<span class="hljs-number">8</span>))<br>ax1 = axes[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]<br>ax2 = axes[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]<br>ax3 = axes[<span class="hljs-number">0</span>,<span class="hljs-number">2</span>]<br>ax4 = axes[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>]<br>ax5 = axes[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>]<br>ax6 = axes[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>]<br><br>sns.countplot(data=dataset, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, ax=ax1, x=<span class="hljs-string">&#x27;T Stage &#x27;</span>,     )<br>sns.countplot(data=dataset, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, ax=ax2, x=<span class="hljs-string">&#x27;N Stage&#x27;</span>,      )<br>sns.countplot(data=dataset, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, ax=ax3, x=<span class="hljs-string">&#x27;6th Stage&#x27;</span>,    )<br>sns.countplot(data=dataset, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, ax=ax4, x=<span class="hljs-string">&#x27;A Stage&#x27;</span>,      )<br>sns.countplot(data=dataset, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, ax=ax5, x=<span class="hljs-string">&#x27;differentiate&#x27;</span>,)<br>sns.countplot(data=dataset, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, ax=ax6, x=<span class="hljs-string">&#x27;Grade&#x27;</span>,        )<br><br>plt.setp(ax5.get_xticklabels(), rotation=<span class="hljs-number">30</span>, ha=<span class="hljs-string">&quot;right&quot;</span>)  <span class="hljs-comment">## 旋转刻度值标签</span><br><br>plt.tight_layout() <br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_17_0.png" alt="png" /></p><h4 id="二定量数据可视化探索"><a class="markdownIt-Anchor" href="#二定量数据可视化探索"></a> （二）定量数据可视化探索</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## 直方图</span><br>fig, ax = plt.subplots(figsize=(<span class="hljs-number">6</span>,<span class="hljs-number">4</span>))<br><br>sns.histplot(data=dataset, bins=<span class="hljs-number">20</span>, kde=<span class="hljs-literal">True</span>, ax=ax, x=<span class="hljs-string">&#x27;Age&#x27;</span>)<br><br></code></pre></td></tr></table></figure><pre><code class="hljs">&lt;AxesSubplot:xlabel='Age', ylabel='Count'&gt;</code></pre><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_19_1.png" alt="png" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## 箱线图</span><br>fig, ax = plt.subplots(figsize=(<span class="hljs-number">6</span>,<span class="hljs-number">4</span>)) <br><br>sns.boxplot(data=dataset, ax=ax, x=<span class="hljs-string">&#x27;Status&#x27;</span>, y=<span class="hljs-string">&#x27;Age&#x27;</span>)<br><br></code></pre></td></tr></table></figure><pre><code class="hljs">&lt;AxesSubplot:xlabel='Status', ylabel='Age'&gt;</code></pre><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_20_1.png" alt="png" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">fig, ax = plt.subplots(nrows=<span class="hljs-number">1</span>, ncols=<span class="hljs-number">2</span>, figsize=(<span class="hljs-number">10</span>,<span class="hljs-number">4</span>))  <br>ax1 = ax[<span class="hljs-number">0</span>]<br>ax2 = ax[<span class="hljs-number">1</span>]<br><br>sns.histplot(data=dataset, bins=<span class="hljs-number">20</span>, kde=<span class="hljs-literal">True</span>, ax=ax1, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, x=<span class="hljs-string">&#x27;Age&#x27;</span>)<br>sns.boxplot(data=dataset, ax=ax2, x=<span class="hljs-string">&#x27;Status&#x27;</span>, y=<span class="hljs-string">&#x27;Age&#x27;</span>)<br><br>plt.tight_layout() <br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_21_0.png" alt="png" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">fig, ax = plt.subplots(nrows=<span class="hljs-number">1</span>, ncols=<span class="hljs-number">2</span>, figsize=(<span class="hljs-number">10</span>,<span class="hljs-number">4</span>))  <br>ax1 = ax[<span class="hljs-number">0</span>]<br>ax2 = ax[<span class="hljs-number">1</span>]<br><br>sns.histplot(data=dataset, bins=<span class="hljs-number">20</span>, kde=<span class="hljs-literal">True</span>, ax=ax1, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, x=<span class="hljs-string">&#x27;Tumor Size&#x27;</span>)<br>sns.boxplot(data=dataset, ax=ax2, x=<span class="hljs-string">&#x27;Status&#x27;</span>, y=<span class="hljs-string">&#x27;Tumor Size&#x27;</span>)<br><br>plt.tight_layout() <br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_22_0.png" alt="png" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">fig, ax = plt.subplots(nrows=<span class="hljs-number">1</span>, ncols=<span class="hljs-number">2</span>, figsize=(<span class="hljs-number">10</span>,<span class="hljs-number">4</span>))  <br>ax1 = ax[<span class="hljs-number">0</span>]<br>ax2 = ax[<span class="hljs-number">1</span>]<br><br>sns.histplot(data=dataset, bins=<span class="hljs-number">20</span>, kde=<span class="hljs-literal">True</span>, ax=ax1, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, x=<span class="hljs-string">&#x27;Regional Node Examined&#x27;</span>)<br>sns.boxplot(data=dataset, ax=ax2, x=<span class="hljs-string">&#x27;Status&#x27;</span>, y=<span class="hljs-string">&#x27;Regional Node Examined&#x27;</span>)<br><br>plt.tight_layout() <br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_23_0.png" alt="png" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">fig, ax = plt.subplots(nrows=<span class="hljs-number">1</span>, ncols=<span class="hljs-number">2</span>, figsize=(<span class="hljs-number">10</span>,<span class="hljs-number">4</span>))  <br>ax1 = ax[<span class="hljs-number">0</span>]<br>ax2 = ax[<span class="hljs-number">1</span>]<br><br>sns.histplot(data=dataset, bins=<span class="hljs-number">20</span>, kde=<span class="hljs-literal">True</span>, ax=ax1, hue=<span class="hljs-string">&#x27;Status&#x27;</span>, x=<span class="hljs-string">&#x27;Reginol Node Positive&#x27;</span>)<br>sns.boxplot(data=dataset, ax=ax2, x=<span class="hljs-string">&#x27;Status&#x27;</span>, y=<span class="hljs-string">&#x27;Reginol Node Positive&#x27;</span>)<br><br>plt.tight_layout() <br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_24_0.png" alt="png" /></p><h2 id="四-数据预处理"><a class="markdownIt-Anchor" href="#四-数据预处理"></a> 四、数据预处理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df = dataset.copy()<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Age</th>      <th>Race</th>      <th>Marital Status</th>      <th>T Stage</th>      <th>N Stage</th>      <th>6th Stage</th>      <th>differentiate</th>      <th>Grade</th>      <th>A Stage</th>      <th>Tumor Size</th>      <th>Estrogen Status</th>      <th>Progesterone Status</th>      <th>Regional Node Examined</th>      <th>Reginol Node Positive</th>      <th>Survival Months</th>      <th>Status</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>68</td>      <td>White</td>      <td>Married</td>      <td>T1</td>      <td>N1</td>      <td>IIA</td>      <td>Poorly differentiated</td>      <td>3</td>      <td>Regional</td>      <td>4</td>      <td>Positive</td>      <td>Positive</td>      <td>24</td>      <td>1</td>      <td>60</td>      <td>Alive</td>    </tr>    <tr>      <th>1</th>      <td>50</td>      <td>White</td>      <td>Married</td>      <td>T2</td>      <td>N2</td>      <td>IIIA</td>      <td>Moderately differentiated</td>      <td>2</td>      <td>Regional</td>      <td>35</td>      <td>Positive</td>      <td>Positive</td>      <td>14</td>      <td>5</td>      <td>62</td>      <td>Alive</td>    </tr>    <tr>      <th>2</th>      <td>58</td>      <td>White</td>      <td>Divorced</td>      <td>T3</td>      <td>N3</td>      <td>IIIC</td>      <td>Moderately differentiated</td>      <td>2</td>      <td>Regional</td>      <td>63</td>      <td>Positive</td>      <td>Positive</td>      <td>14</td>      <td>7</td>      <td>75</td>      <td>Alive</td>    </tr>    <tr>      <th>3</th>      <td>58</td>      <td>White</td>      <td>Married</td>      <td>T1</td>      <td>N1</td>      <td>IIA</td>      <td>Poorly differentiated</td>      <td>3</td>      <td>Regional</td>      <td>18</td>      <td>Positive</td>      <td>Positive</td>      <td>2</td>      <td>1</td>      <td>84</td>      <td>Alive</td>    </tr>    <tr>      <th>4</th>      <td>47</td>      <td>White</td>      <td>Married</td>      <td>T2</td>      <td>N1</td>      <td>IIB</td>      <td>Poorly differentiated</td>      <td>3</td>      <td>Regional</td>      <td>41</td>      <td>Positive</td>      <td>Positive</td>      <td>3</td>      <td>1</td>      <td>50</td>      <td>Alive</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df.columns<br></code></pre></td></tr></table></figure><pre><code class="hljs">Index(['Age', 'Race', 'Marital Status', 'T Stage ', 'N Stage', '6th Stage',       'differentiate', 'Grade', 'A Stage', 'Tumor Size', 'Estrogen Status',       'Progesterone Status', 'Regional Node Examined',       'Reginol Node Positive', 'Survival Months', 'Status'],      dtype='object')</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## 列名（特征名）重命名</span><br>df.columns = [<span class="hljs-string">&#x27;Age&#x27;</span>, <span class="hljs-string">&#x27;Race&#x27;</span>, <span class="hljs-string">&#x27;Marital Status&#x27;</span>, <span class="hljs-string">&#x27;T Stage&#x27;</span>, <span class="hljs-string">&#x27;N Stage&#x27;</span>, <span class="hljs-string">&#x27;6th Stage&#x27;</span>,<br>              <span class="hljs-string">&#x27;differentiate&#x27;</span>, <span class="hljs-string">&#x27;Grade&#x27;</span>, <span class="hljs-string">&#x27;A Stage&#x27;</span>, <span class="hljs-string">&#x27;Tumor Size&#x27;</span>, <span class="hljs-string">&#x27;Estrogen Status&#x27;</span>,<br>              <span class="hljs-string">&#x27;Progesterone Status&#x27;</span>, <span class="hljs-string">&#x27;Regional Node Examined&#x27;</span>,<br>              <span class="hljs-string">&#x27;Regional Node Positive&#x27;</span>, <span class="hljs-string">&#x27;Survival Months&#x27;</span>, <span class="hljs-string">&#x27;Status&#x27;</span>]<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df.columns<br></code></pre></td></tr></table></figure><pre><code class="hljs">Index(['Age', 'Race', 'Marital Status', 'T Stage', 'N Stage', '6th Stage',       'differentiate', 'Grade', 'A Stage', 'Tumor Size', 'Estrogen Status',       'Progesterone Status', 'Regional Node Examined',       'Regional Node Positive', 'Survival Months', 'Status'],      dtype='object')</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df[<span class="hljs-string">&#x27;Grade&#x27;</span>].value_counts()<br></code></pre></td></tr></table></figure><pre><code class="hljs">2                        23513                        11111                         543 anaplastic; Grade IV      19Name: Grade, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## 变量值重编码 df.loc[index, columns_name] = value</span><br><br>df.loc[df[<span class="hljs-string">&#x27;Grade&#x27;</span>]==<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;Grade&#x27;</span>] = <span class="hljs-string">&#x27;Ⅰ&#x27;</span><br>df.loc[df[<span class="hljs-string">&#x27;Grade&#x27;</span>]==<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;Grade&#x27;</span>] = <span class="hljs-string">&#x27;Ⅱ&#x27;</span><br>df.loc[df[<span class="hljs-string">&#x27;Grade&#x27;</span>]==<span class="hljs-number">3</span>, <span class="hljs-string">&#x27;Grade&#x27;</span>] = <span class="hljs-string">&#x27;Ⅲ&#x27;</span><br>df.loc[df[<span class="hljs-string">&#x27;Grade&#x27;</span>]==<span class="hljs-string">&#x27; anaplastic; Grade IV&#x27;</span>, <span class="hljs-string">&#x27;Grade&#x27;</span>] = <span class="hljs-string">&#x27;IV&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df[<span class="hljs-string">&#x27;Grade&#x27;</span>].value_counts()<br></code></pre></td></tr></table></figure><pre><code class="hljs">Ⅱ     2351Ⅲ     1111Ⅰ      543IV      19Name: Grade, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df[<span class="hljs-string">&#x27;Marital Status&#x27;</span>].value_counts()<br></code></pre></td></tr></table></figure><pre><code class="hljs">Married      2643Single        615Divorced      486Widowed       235Separated      45Name: Marital Status, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">df.loc[df[<span class="hljs-string">&#x27;Marital Status&#x27;</span>] == <span class="hljs-string">&#x27;Divorced&#x27;</span>, <span class="hljs-string">&#x27;Marital Status&#x27;</span>] = <span class="hljs-string">&#x27;Other&#x27;</span><br>df.loc[df[<span class="hljs-string">&#x27;Marital Status&#x27;</span>] == <span class="hljs-string">&#x27;Widowed&#x27;</span>, <span class="hljs-string">&#x27;Marital Status&#x27;</span>] = <span class="hljs-string">&#x27;Other&#x27;</span><br>df.loc[df[<span class="hljs-string">&#x27;Marital Status&#x27;</span>] == <span class="hljs-string">&#x27;Separated&#x27;</span>, <span class="hljs-string">&#x27;Marital Status&#x27;</span>] = <span class="hljs-string">&#x27;Other&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df[<span class="hljs-string">&#x27;Marital Status&#x27;</span>].value_counts()<br></code></pre></td></tr></table></figure><pre><code class="hljs">Married    2643Other       766Single      615Name: Marital Status, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">df.loc[df[<span class="hljs-string">&#x27;Age&#x27;</span>]&gt;=<span class="hljs-number">50</span>, <span class="hljs-string">&#x27;Age&#x27;</span>] = <span class="hljs-number">2</span><br>df.loc[df[<span class="hljs-string">&#x27;Age&#x27;</span>]&gt;=<span class="hljs-number">40</span>, <span class="hljs-string">&#x27;Age&#x27;</span>] = <span class="hljs-number">1</span><br>df.loc[df[<span class="hljs-string">&#x27;Age&#x27;</span>]&gt;=<span class="hljs-number">30</span>, <span class="hljs-string">&#x27;Age&#x27;</span>] = <span class="hljs-number">0</span><br><br>df.loc[df[<span class="hljs-string">&#x27;Age&#x27;</span>]==<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;Age&#x27;</span>] = <span class="hljs-string">&#x27;elderly&#x27;</span><br>df.loc[df[<span class="hljs-string">&#x27;Age&#x27;</span>]==<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;Age&#x27;</span>] = <span class="hljs-string">&#x27;middle aged&#x27;</span><br>df.loc[df[<span class="hljs-string">&#x27;Age&#x27;</span>]==<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;Age&#x27;</span>] = <span class="hljs-string">&#x27;thirties&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df[<span class="hljs-string">&#x27;Age&#x27;</span>].value_counts()<br></code></pre></td></tr></table></figure><pre><code class="hljs">elderly        2670middle aged    1124thirties        230Name: Age, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Age</th>      <th>Race</th>      <th>Marital Status</th>      <th>T Stage</th>      <th>N Stage</th>      <th>6th Stage</th>      <th>differentiate</th>      <th>Grade</th>      <th>A Stage</th>      <th>Tumor Size</th>      <th>Estrogen Status</th>      <th>Progesterone Status</th>      <th>Regional Node Examined</th>      <th>Regional Node Positive</th>      <th>Survival Months</th>      <th>Status</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>elderly</td>      <td>White</td>      <td>Married</td>      <td>T1</td>      <td>N1</td>      <td>IIA</td>      <td>Poorly differentiated</td>      <td>Ⅲ</td>      <td>Regional</td>      <td>4</td>      <td>Positive</td>      <td>Positive</td>      <td>24</td>      <td>1</td>      <td>60</td>      <td>Alive</td>    </tr>    <tr>      <th>1</th>      <td>elderly</td>      <td>White</td>      <td>Married</td>      <td>T2</td>      <td>N2</td>      <td>IIIA</td>      <td>Moderately differentiated</td>      <td>Ⅱ</td>      <td>Regional</td>      <td>35</td>      <td>Positive</td>      <td>Positive</td>      <td>14</td>      <td>5</td>      <td>62</td>      <td>Alive</td>    </tr>    <tr>      <th>2</th>      <td>elderly</td>      <td>White</td>      <td>Other</td>      <td>T3</td>      <td>N3</td>      <td>IIIC</td>      <td>Moderately differentiated</td>      <td>Ⅱ</td>      <td>Regional</td>      <td>63</td>      <td>Positive</td>      <td>Positive</td>      <td>14</td>      <td>7</td>      <td>75</td>      <td>Alive</td>    </tr>    <tr>      <th>3</th>      <td>elderly</td>      <td>White</td>      <td>Married</td>      <td>T1</td>      <td>N1</td>      <td>IIA</td>      <td>Poorly differentiated</td>      <td>Ⅲ</td>      <td>Regional</td>      <td>18</td>      <td>Positive</td>      <td>Positive</td>      <td>2</td>      <td>1</td>      <td>84</td>      <td>Alive</td>    </tr>    <tr>      <th>4</th>      <td>middle aged</td>      <td>White</td>      <td>Married</td>      <td>T2</td>      <td>N1</td>      <td>IIB</td>      <td>Poorly differentiated</td>      <td>Ⅲ</td>      <td>Regional</td>      <td>41</td>      <td>Positive</td>      <td>Positive</td>      <td>3</td>      <td>1</td>      <td>50</td>      <td>Alive</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## 数据逻辑判断</span><br>df.loc[df[<span class="hljs-string">&#x27;Regional Node Positive&#x27;</span>]&gt;df[<span class="hljs-string">&#x27;Regional Node Examined&#x27;</span>],:]<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Age</th>      <th>Race</th>      <th>Marital Status</th>      <th>T Stage</th>      <th>N Stage</th>      <th>6th Stage</th>      <th>differentiate</th>      <th>Grade</th>      <th>A Stage</th>      <th>Tumor Size</th>      <th>Estrogen Status</th>      <th>Progesterone Status</th>      <th>Regional Node Examined</th>      <th>Regional Node Positive</th>      <th>Survival Months</th>      <th>Status</th>    </tr>  </thead>  <tbody>  </tbody></table></div><h2 id="五-统计检验"><a class="markdownIt-Anchor" href="#五-统计检验"></a> 五、统计检验</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## 正态性检验 Shapiro–Wilk test</span><br><span class="hljs-keyword">from</span> scipy.stats <span class="hljs-keyword">import</span> shapiro<br><br>num_columns = [<span class="hljs-string">&#x27;Tumor Size&#x27;</span>, <span class="hljs-string">&#x27;Regional Node Examined&#x27;</span>, <span class="hljs-string">&#x27;Regional Node Positive&#x27;</span>, <span class="hljs-string">&#x27;Survival Months&#x27;</span>]<br><span class="hljs-keyword">for</span> column <span class="hljs-keyword">in</span> num_columns:<br>    stat,p = shapiro(df[column])<br>    <span class="hljs-built_in">print</span>(column, <span class="hljs-string">&quot;\n 统计量：%f &quot;</span> %stat,<span class="hljs-string">&quot; p值为：%f \n&quot;</span> %p)<br></code></pre></td></tr></table></figure><pre><code class="hljs">Tumor Size  统计量：0.841386   p值为：0.000000 Regional Node Examined  统计量：0.959947   p值为：0.000000 Regional Node Positive  统计量：0.653167   p值为：0.000000 Survival Months  统计量：0.962401   p值为：0.000000 </code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## 方差齐性检验 levene检验</span><br><span class="hljs-keyword">from</span> scipy.stats <span class="hljs-keyword">import</span> levene<br>num_columns = [<span class="hljs-string">&#x27;Tumor Size&#x27;</span>, <span class="hljs-string">&#x27;Regional Node Examined&#x27;</span>, <span class="hljs-string">&#x27;Regional Node Positive&#x27;</span>, <span class="hljs-string">&#x27;Survival Months&#x27;</span>]<br><span class="hljs-keyword">for</span> column <span class="hljs-keyword">in</span> num_columns:<br>    d1 = df.loc[df[<span class="hljs-string">&#x27;Status&#x27;</span>]==<span class="hljs-string">&#x27;Alive&#x27;</span>, column]<br>    d2 = df.loc[df[<span class="hljs-string">&#x27;Status&#x27;</span>]==<span class="hljs-string">&#x27;Dead&#x27;</span>, column]<br>    stat, p = levene(d1, d2)<br>    <span class="hljs-built_in">print</span>(column, <span class="hljs-string">&quot;\n 统计量：%f &quot;</span> %stat,<span class="hljs-string">&quot; p值为：%f \n&quot;</span> %p)<br></code></pre></td></tr></table></figure><pre><code class="hljs">Tumor Size  统计量：25.620942   p值为：0.000000 Regional Node Examined  统计量：2.684287   p值为：0.101421 Regional Node Positive  统计量：218.336354   p值为：0.000000 Survival Months  统计量：48.542707   p值为：0.000000 </code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## 独立样本t检验</span><br><span class="hljs-keyword">from</span> scipy.stats <span class="hljs-keyword">import</span> ttest_ind<br>num_columns = [<span class="hljs-string">&#x27;Tumor Size&#x27;</span>, <span class="hljs-string">&#x27;Regional Node Positive&#x27;</span>, <span class="hljs-string">&#x27;Survival Months&#x27;</span>]<br><span class="hljs-keyword">for</span> column <span class="hljs-keyword">in</span> num_columns:<br>    d1 = df.loc[df[<span class="hljs-string">&#x27;Status&#x27;</span>]==<span class="hljs-string">&#x27;Alive&#x27;</span>, column]<br>    d2 = df.loc[df[<span class="hljs-string">&#x27;Status&#x27;</span>]==<span class="hljs-string">&#x27;Dead&#x27;</span>, column]<br>    stat,p = ttest_ind(d1,d2)<br>    <span class="hljs-built_in">print</span>(column, <span class="hljs-string">&quot;\n 统计量：%f &quot;</span> %stat,<span class="hljs-string">&quot; p值为：%f \n&quot;</span> %p)<br></code></pre></td></tr></table></figure><pre><code class="hljs">Tumor Size  统计量：-8.588885   p值为：0.000000 Regional Node Positive  统计量：-16.839798   p值为：0.000000 Survival Months  统计量：34.373652   p值为：0.000000 </code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## Kruskal-wallis H检验</span><br><span class="hljs-keyword">from</span> scipy.stats <span class="hljs-keyword">import</span> kruskal<br>num_columns = [<span class="hljs-string">&#x27;Tumor Size&#x27;</span>, <span class="hljs-string">&#x27;Regional Node Examined&#x27;</span>, <span class="hljs-string">&#x27;Regional Node Positive&#x27;</span>, <span class="hljs-string">&#x27;Survival Months&#x27;</span>]<br><span class="hljs-keyword">for</span> column <span class="hljs-keyword">in</span> num_columns:<br>    d1 = df.loc[df[<span class="hljs-string">&#x27;Status&#x27;</span>]==<span class="hljs-string">&#x27;Alive&#x27;</span>, column]<br>    d2 = df.loc[df[<span class="hljs-string">&#x27;Status&#x27;</span>]==<span class="hljs-string">&#x27;Dead&#x27;</span>, column]<br>    stat,p = kruskal(d1,d2)<br>    <span class="hljs-built_in">print</span>(column, <span class="hljs-string">&quot;\n 统计量：%f &quot;</span> %stat,<span class="hljs-string">&quot; p值为：%f \n&quot;</span> %p)<br></code></pre></td></tr></table></figure><pre><code class="hljs">Tumor Size  统计量：79.489347   p值为：0.000000 Regional Node Examined  统计量：3.347812   p值为：0.067294 Regional Node Positive  统计量：193.064051   p值为：0.000000 Survival Months  统计量：694.131827   p值为：0.000000 </code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## 卡方检验</span><br><span class="hljs-keyword">from</span> scipy.stats <span class="hljs-keyword">import</span> chi2_contingency<br>num_columns = [<span class="hljs-string">&#x27;Age&#x27;</span>, <span class="hljs-string">&#x27;Race&#x27;</span>, <span class="hljs-string">&#x27;Marital Status&#x27;</span>, <span class="hljs-string">&#x27;T Stage&#x27;</span>, <span class="hljs-string">&#x27;N Stage&#x27;</span>, <span class="hljs-string">&#x27;6th Stage&#x27;</span>,<br>       <span class="hljs-string">&#x27;differentiate&#x27;</span>, <span class="hljs-string">&#x27;Grade&#x27;</span>, <span class="hljs-string">&#x27;A Stage&#x27;</span>, <span class="hljs-string">&#x27;Estrogen Status&#x27;</span>,<span class="hljs-string">&#x27;Progesterone Status&#x27;</span>]<br><span class="hljs-keyword">for</span> column <span class="hljs-keyword">in</span> num_columns:<br>    stat,p,dof,expected = chi2_contingency(pd.crosstab(df[column],df[<span class="hljs-string">&#x27;Status&#x27;</span>]))<br>    <span class="hljs-built_in">print</span>(column, <span class="hljs-string">&quot;\n 统计量：%f &quot;</span> %stat,<span class="hljs-string">&quot; p值：%f \n&quot;</span> %p)<br></code></pre></td></tr></table></figure><pre><code class="hljs">Age  统计量：15.289546   p值：0.000479 Race  统计量：27.970007   p值：0.000001 Marital Status  统计量：21.145650   p值：0.000026 T Stage  统计量：103.476309   p值：0.000000 N Stage  统计量：269.929143   p值：0.000000 6th Stage  统计量：281.648443   p值：0.000000 differentiate  统计量：112.556276   p值：0.000000 Grade  统计量：112.556276   p值：0.000000 A Stage  统计量：35.764727   p值：0.000000 Estrogen Status  统计量：135.155739   p值：0.000000 Progesterone Status  统计量：124.885388   p值：0.000000 </code></pre><h2 id="六-数据编码"><a class="markdownIt-Anchor" href="#六-数据编码"></a> 六、数据编码</h2><h4 id="一定量资料"><a class="markdownIt-Anchor" href="#一定量资料"></a> （一）定量资料</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">X_num = df[[<span class="hljs-string">&#x27;Tumor Size&#x27;</span>, <span class="hljs-string">&#x27;Regional Node Examined&#x27;</span>, <span class="hljs-string">&#x27;Regional Node Positive&#x27;</span>, <span class="hljs-string">&#x27;Survival Months&#x27;</span> ]]<br>X_num.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Tumor Size</th>      <th>Regional Node Examined</th>      <th>Regional Node Positive</th>      <th>Survival Months</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>4</td>      <td>24</td>      <td>1</td>      <td>60</td>    </tr>    <tr>      <th>1</th>      <td>35</td>      <td>14</td>      <td>5</td>      <td>62</td>    </tr>    <tr>      <th>2</th>      <td>63</td>      <td>14</td>      <td>7</td>      <td>75</td>    </tr>    <tr>      <th>3</th>      <td>18</td>      <td>2</td>      <td>1</td>      <td>84</td>    </tr>    <tr>      <th>4</th>      <td>41</td>      <td>3</td>      <td>1</td>      <td>50</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">X_num.describe()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Tumor Size</th>      <th>Regional Node Examined</th>      <th>Regional Node Positive</th>      <th>Survival Months</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>4024.000000</td>      <td>4024.000000</td>      <td>4024.000000</td>      <td>4024.000000</td>    </tr>    <tr>      <th>mean</th>      <td>30.473658</td>      <td>14.357107</td>      <td>4.158052</td>      <td>71.297962</td>    </tr>    <tr>      <th>std</th>      <td>21.119696</td>      <td>8.099675</td>      <td>5.109331</td>      <td>22.921430</td>    </tr>    <tr>      <th>min</th>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>    </tr>    <tr>      <th>25%</th>      <td>16.000000</td>      <td>9.000000</td>      <td>1.000000</td>      <td>56.000000</td>    </tr>    <tr>      <th>50%</th>      <td>25.000000</td>      <td>14.000000</td>      <td>2.000000</td>      <td>73.000000</td>    </tr>    <tr>      <th>75%</th>      <td>38.000000</td>      <td>19.000000</td>      <td>5.000000</td>      <td>90.000000</td>    </tr>    <tr>      <th>max</th>      <td>140.000000</td>      <td>61.000000</td>      <td>46.000000</td>      <td>107.000000</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## 数据标准化</span><br>X_num_norm = (X_num - X_num.mean()) / X_num.std()<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">X_num_norm.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Tumor Size</th>      <th>Regional Node Examined</th>      <th>Regional Node Positive</th>      <th>Survival Months</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>-1.253506</td>      <td>1.190528</td>      <td>-0.618095</td>      <td>-0.492900</td>    </tr>    <tr>      <th>1</th>      <td>0.214319</td>      <td>-0.044089</td>      <td>0.164786</td>      <td>-0.405645</td>    </tr>    <tr>      <th>2</th>      <td>1.540095</td>      <td>-0.044089</td>      <td>0.556227</td>      <td>0.161510</td>    </tr>    <tr>      <th>3</th>      <td>-0.590617</td>      <td>-1.525630</td>      <td>-0.618095</td>      <td>0.554156</td>    </tr>    <tr>      <th>4</th>      <td>0.498414</td>      <td>-1.402168</td>      <td>-0.618095</td>      <td>-0.929173</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">X_num_norm.describe()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Tumor Size</th>      <th>Regional Node Examined</th>      <th>Regional Node Positive</th>      <th>Survival Months</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>4.024000e+03</td>      <td>4.024000e+03</td>      <td>4.024000e+03</td>      <td>4.024000e+03</td>    </tr>    <tr>      <th>mean</th>      <td>4.679270e-17</td>      <td>5.650439e-17</td>      <td>1.187475e-16</td>      <td>3.063598e-16</td>    </tr>    <tr>      <th>std</th>      <td>1.000000e+00</td>      <td>1.000000e+00</td>      <td>1.000000e+00</td>      <td>1.000000e+00</td>    </tr>    <tr>      <th>min</th>      <td>-1.395553e+00</td>      <td>-1.649092e+00</td>      <td>-6.180949e-01</td>      <td>-3.066910e+00</td>    </tr>    <tr>      <th>25%</th>      <td>-6.853156e-01</td>      <td>-6.613978e-01</td>      <td>-6.180949e-01</td>      <td>-6.674087e-01</td>    </tr>    <tr>      <th>50%</th>      <td>-2.591731e-01</td>      <td>-4.408910e-02</td>      <td>-4.223746e-01</td>      <td>7.425531e-02</td>    </tr>    <tr>      <th>75%</th>      <td>3.563660e-01</td>      <td>5.732196e-01</td>      <td>1.647864e-01</td>      <td>8.159193e-01</td>    </tr>    <tr>      <th>max</th>      <td>5.185981e+00</td>      <td>5.758613e+00</td>      <td>8.189320e+00</td>      <td>1.557583e+00</td>    </tr>  </tbody></table></div><h4 id="二定性资料"><a class="markdownIt-Anchor" href="#二定性资料"></a> (二)定性资料</h4><h6 id="二分类资料或等级资料"><a class="markdownIt-Anchor" href="#二分类资料或等级资料"></a> 二分类资料或等级资料</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">X_deg = df[[<span class="hljs-string">&#x27;T Stage&#x27;</span>, <span class="hljs-string">&#x27;N Stage&#x27;</span>, <span class="hljs-string">&#x27;6th Stage&#x27;</span>,<span class="hljs-string">&#x27;differentiate&#x27;</span>, <br>            <span class="hljs-string">&#x27;Grade&#x27;</span>, <span class="hljs-string">&#x27;A Stage&#x27;</span>,<span class="hljs-string">&#x27;Estrogen Status&#x27;</span>,<span class="hljs-string">&#x27;Progesterone Status&#x27;</span>,<span class="hljs-string">&#x27;Status&#x27;</span>]]<br><br>X_deg.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>T Stage</th>      <th>N Stage</th>      <th>6th Stage</th>      <th>differentiate</th>      <th>Grade</th>      <th>A Stage</th>      <th>Estrogen Status</th>      <th>Progesterone Status</th>      <th>Status</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>T1</td>      <td>N1</td>      <td>IIA</td>      <td>Poorly differentiated</td>      <td>Ⅲ</td>      <td>Regional</td>      <td>Positive</td>      <td>Positive</td>      <td>Alive</td>    </tr>    <tr>      <th>1</th>      <td>T2</td>      <td>N2</td>      <td>IIIA</td>      <td>Moderately differentiated</td>      <td>Ⅱ</td>      <td>Regional</td>      <td>Positive</td>      <td>Positive</td>      <td>Alive</td>    </tr>    <tr>      <th>2</th>      <td>T3</td>      <td>N3</td>      <td>IIIC</td>      <td>Moderately differentiated</td>      <td>Ⅱ</td>      <td>Regional</td>      <td>Positive</td>      <td>Positive</td>      <td>Alive</td>    </tr>    <tr>      <th>3</th>      <td>T1</td>      <td>N1</td>      <td>IIA</td>      <td>Poorly differentiated</td>      <td>Ⅲ</td>      <td>Regional</td>      <td>Positive</td>      <td>Positive</td>      <td>Alive</td>    </tr>    <tr>      <th>4</th>      <td>T2</td>      <td>N1</td>      <td>IIB</td>      <td>Poorly differentiated</td>      <td>Ⅲ</td>      <td>Regional</td>      <td>Positive</td>      <td>Positive</td>      <td>Alive</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## 编码</span><br>pd.set_option(<span class="hljs-string">&#x27;mode.chained_assignment&#x27;</span>, <span class="hljs-literal">None</span>)<br>X_deg.loc[:,<span class="hljs-string">&#x27;Status&#x27;</span>] = X_deg[<span class="hljs-string">&#x27;Status&#x27;</span>].<span class="hljs-built_in">map</span>(&#123;<span class="hljs-string">&#x27;Alive&#x27;</span>:<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;Dead&#x27;</span>:<span class="hljs-number">1</span>&#125;).astype(<span class="hljs-string">&quot;int64&quot;</span>)<br>X_deg.loc[:,<span class="hljs-string">&#x27;Grade&#x27;</span>] = X_deg[<span class="hljs-string">&#x27;Grade&#x27;</span>].<span class="hljs-built_in">map</span>(&#123;<span class="hljs-string">&#x27;Ⅰ&#x27;</span>:<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;Ⅱ&#x27;</span>:<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;Ⅲ&#x27;</span>:<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;IV&#x27;</span>:<span class="hljs-number">3</span>&#125;).astype(<span class="hljs-string">&quot;int64&quot;</span>)<br>X_deg.loc[:,<span class="hljs-string">&#x27;T Stage&#x27;</span>] = X_deg[<span class="hljs-string">&#x27;T Stage&#x27;</span>].<span class="hljs-built_in">map</span>(&#123;<span class="hljs-string">&#x27;T1&#x27;</span>:<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;T2&#x27;</span>:<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;T3&#x27;</span>:<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;T4&#x27;</span>:<span class="hljs-number">3</span>&#125;).astype(<span class="hljs-string">&quot;int64&quot;</span>)<br>X_deg.loc[:,<span class="hljs-string">&#x27;N Stage&#x27;</span>] = X_deg[<span class="hljs-string">&#x27;N Stage&#x27;</span>].<span class="hljs-built_in">map</span>(&#123;<span class="hljs-string">&#x27;N1&#x27;</span>:<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;N2&#x27;</span>:<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;N3&#x27;</span>:<span class="hljs-number">2</span>&#125;).astype(<span class="hljs-string">&quot;int64&quot;</span>)<br>X_deg.loc[:,<span class="hljs-string">&#x27;A Stage&#x27;</span>] = X_deg[<span class="hljs-string">&#x27;A Stage&#x27;</span>].<span class="hljs-built_in">map</span>(&#123;<span class="hljs-string">&#x27;Regional&#x27;</span>:<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;Distant&#x27;</span>:<span class="hljs-number">1</span>&#125;).astype(<span class="hljs-string">&quot;int64&quot;</span>)<br>X_deg.loc[:,<span class="hljs-string">&#x27;6th Stage&#x27;</span>] = X_deg[<span class="hljs-string">&#x27;6th Stage&#x27;</span>].<span class="hljs-built_in">map</span>(&#123;<span class="hljs-string">&#x27;IIA&#x27;</span>:<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;IIB&#x27;</span>:<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;IIIA&#x27;</span>:<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;IIIB&#x27;</span>:<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;IIIC&#x27;</span>:<span class="hljs-number">4</span>&#125;).astype(<span class="hljs-string">&quot;int64&quot;</span>)<br>X_deg.loc[:,<span class="hljs-string">&#x27;Estrogen Status&#x27;</span>] = X_deg[<span class="hljs-string">&#x27;Estrogen Status&#x27;</span>].<span class="hljs-built_in">map</span>(&#123;<span class="hljs-string">&#x27;Negative&#x27;</span>:<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;Positive&#x27;</span>:<span class="hljs-number">1</span>&#125;).astype(<span class="hljs-string">&quot;int64&quot;</span>)<br>X_deg.loc[:,<span class="hljs-string">&#x27;Progesterone Status&#x27;</span>] = X_deg[<span class="hljs-string">&#x27;Progesterone Status&#x27;</span>].<span class="hljs-built_in">map</span>(&#123;<span class="hljs-string">&#x27;Negative&#x27;</span>:<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;Positive&#x27;</span>:<span class="hljs-number">1</span>&#125;).astype(<span class="hljs-string">&quot;int64&quot;</span>)<br>X_deg.loc[:,<span class="hljs-string">&#x27;differentiate&#x27;</span>] = X_deg[<span class="hljs-string">&#x27;differentiate&#x27;</span>].<span class="hljs-built_in">map</span>(&#123;<span class="hljs-string">&#x27;Well differentiated&#x27;</span>:<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;Moderately differentiated&#x27;</span>:<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;Poorly differentiated&#x27;</span>:<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;Undifferentiated&#x27;</span>:<span class="hljs-number">3</span>&#125;).astype(<span class="hljs-string">&quot;int64&quot;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">X_deg.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>T Stage</th>      <th>N Stage</th>      <th>6th Stage</th>      <th>differentiate</th>      <th>Grade</th>      <th>A Stage</th>      <th>Estrogen Status</th>      <th>Progesterone Status</th>      <th>Status</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>0</td>      <td>0</td>      <td>0</td>      <td>2</td>      <td>2</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>1</th>      <td>1</td>      <td>1</td>      <td>2</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>2</th>      <td>2</td>      <td>2</td>      <td>4</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>3</th>      <td>0</td>      <td>0</td>      <td>0</td>      <td>2</td>      <td>2</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>4</th>      <td>1</td>      <td>0</td>      <td>1</td>      <td>2</td>      <td>2</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>  </tbody></table></div><h6 id="无序多分类变量"><a class="markdownIt-Anchor" href="#无序多分类变量"></a> 无序多分类变量</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">X_cat = df[[<span class="hljs-string">&#x27;Age&#x27;</span>,<span class="hljs-string">&#x27;Race&#x27;</span>,<span class="hljs-string">&#x27;Marital Status&#x27;</span>]]<br>X_cat.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Age</th>      <th>Race</th>      <th>Marital Status</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>elderly</td>      <td>White</td>      <td>Married</td>    </tr>    <tr>      <th>1</th>      <td>elderly</td>      <td>White</td>      <td>Married</td>    </tr>    <tr>      <th>2</th>      <td>elderly</td>      <td>White</td>      <td>Other</td>    </tr>    <tr>      <th>3</th>      <td>elderly</td>      <td>White</td>      <td>Married</td>    </tr>    <tr>      <th>4</th>      <td>middle aged</td>      <td>White</td>      <td>Married</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## 哑变量编码</span><br>X_cat = pd.get_dummies(X_cat)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">X_cat.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Age_elderly</th>      <th>Age_middle aged</th>      <th>Age_thirties</th>      <th>Race_Black</th>      <th>Race_Other</th>      <th>Race_White</th>      <th>Marital Status_Married</th>      <th>Marital Status_Other</th>      <th>Marital Status_Single</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>1</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>2</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>0</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>3</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>4</th>      <td>0</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>0</td>    </tr>  </tbody></table></div><h6 id="合并编码后的数据资料"><a class="markdownIt-Anchor" href="#合并编码后的数据资料"></a> 合并编码后的数据资料</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">data = pd.concat([X_num_norm, X_cat, X_deg], axis=<span class="hljs-number">1</span>)<br>data.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Tumor Size</th>      <th>Regional Node Examined</th>      <th>Regional Node Positive</th>      <th>Survival Months</th>      <th>Age_elderly</th>      <th>Age_middle aged</th>      <th>Age_thirties</th>      <th>Race_Black</th>      <th>Race_Other</th>      <th>Race_White</th>      <th>...</th>      <th>Marital Status_Single</th>      <th>T Stage</th>      <th>N Stage</th>      <th>6th Stage</th>      <th>differentiate</th>      <th>Grade</th>      <th>A Stage</th>      <th>Estrogen Status</th>      <th>Progesterone Status</th>      <th>Status</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>-1.253506</td>      <td>1.190528</td>      <td>-0.618095</td>      <td>-0.492900</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>2</td>      <td>2</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>1</th>      <td>0.214319</td>      <td>-0.044089</td>      <td>0.164786</td>      <td>-0.405645</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>2</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>2</th>      <td>1.540095</td>      <td>-0.044089</td>      <td>0.556227</td>      <td>0.161510</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>2</td>      <td>2</td>      <td>4</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>3</th>      <td>-0.590617</td>      <td>-1.525630</td>      <td>-0.618095</td>      <td>0.554156</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>2</td>      <td>2</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>4</th>      <td>0.498414</td>      <td>-1.402168</td>      <td>-0.618095</td>      <td>-0.929173</td>      <td>0</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>1</td>      <td>0</td>      <td>1</td>      <td>2</td>      <td>2</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>  </tbody></table><p>5 rows × 22 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">data.info()<br></code></pre></td></tr></table></figure><pre><code class="hljs">&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 4024 entries, 0 to 4023Data columns (total 22 columns): ##   Column                  Non-Null Count  Dtype  ---  ------                  --------------  -----   0   Tumor Size              4024 non-null   float64 1   Regional Node Examined  4024 non-null   float64 2   Regional Node Positive  4024 non-null   float64 3   Survival Months         4024 non-null   float64 4   Age_elderly             4024 non-null   uint8   5   Age_middle aged         4024 non-null   uint8   6   Age_thirties            4024 non-null   uint8   7   Race_Black              4024 non-null   uint8   8   Race_Other              4024 non-null   uint8   9   Race_White              4024 non-null   uint8   10  Marital Status_Married  4024 non-null   uint8   11  Marital Status_Other    4024 non-null   uint8   12  Marital Status_Single   4024 non-null   uint8   13  T Stage                 4024 non-null   int64   14  N Stage                 4024 non-null   int64   15  6th Stage               4024 non-null   int64   16  differentiate           4024 non-null   int64   17  Grade                   4024 non-null   int64   18  A Stage                 4024 non-null   int64   19  Estrogen Status         4024 non-null   int64   20  Progesterone Status     4024 non-null   int64   21  Status                  4024 non-null   int64  dtypes: float64(4), int64(9), uint8(9)memory usage: 444.2 KB</code></pre><h2 id="七-相关性分析"><a class="markdownIt-Anchor" href="#七-相关性分析"></a> 七、相关性分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## 散点图</span><br>fig, ax = plt.subplots(figsize=(<span class="hljs-number">6</span>,<span class="hljs-number">4</span>))<br>sns.scatterplot(data=data, x=<span class="hljs-string">&#x27;Regional Node Examined&#x27;</span>, y=<span class="hljs-string">&#x27;Regional Node Positive&#x27;</span>, <br>                     hue=<span class="hljs-string">&#x27;Status&#x27;</span>, palette=<span class="hljs-string">&#x27;Blues&#x27;</span>, ax=ax)<br><br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_67_0.png" alt="png" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## 相关系数矩阵</span><br>dcorr = data.corr(method=<span class="hljs-string">&#x27;spearman&#x27;</span>)<br><span class="hljs-comment">## dcorr</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## 相关系数热图</span><br>fig, ax = plt.subplots(figsize=(<span class="hljs-number">20</span>,<span class="hljs-number">16</span>))<br>sns.heatmap(dcorr, cmap=<span class="hljs-string">&#x27;Blues&#x27;</span>, annot=<span class="hljs-literal">True</span>, fmt=<span class="hljs-string">&#x27;.2f&#x27;</span>, linewidths=<span class="hljs-number">2</span>, linecolor=<span class="hljs-string">&#x27;white&#x27;</span>, square=<span class="hljs-literal">True</span>, ax=ax)<br><br>ax.tick_params(bottom=<span class="hljs-literal">False</span>, labelbottom=<span class="hljs-literal">False</span>, top=<span class="hljs-literal">True</span>, labeltop=<span class="hljs-literal">True</span>)  <span class="hljs-comment">##修改坐标轴显示</span><br>plt.setp(ax.get_xticklabels(), rotation= <span class="hljs-number">60</span>, ha=<span class="hljs-string">&quot;left&quot;</span>)    <span class="hljs-comment">## 旋转坐标轴标签的显示方向</span><br><br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_69_0.png" alt="png" /></p><h2 id="八-逻辑回归分析"><a class="markdownIt-Anchor" href="#八-逻辑回归分析"></a> 八、逻辑回归分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">X = data.iloc[:, :-<span class="hljs-number">1</span>]<br><span class="hljs-comment">## 人工添加截距项</span><br>X[<span class="hljs-string">&#x27;intercept&#x27;</span>] = <span class="hljs-number">1.0</span> <br>X.head()<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Tumor Size</th>      <th>Regional Node Examined</th>      <th>Regional Node Positive</th>      <th>Survival Months</th>      <th>Age_elderly</th>      <th>Age_middle aged</th>      <th>Age_thirties</th>      <th>Race_Black</th>      <th>Race_Other</th>      <th>Race_White</th>      <th>...</th>      <th>Marital Status_Single</th>      <th>T Stage</th>      <th>N Stage</th>      <th>6th Stage</th>      <th>differentiate</th>      <th>Grade</th>      <th>A Stage</th>      <th>Estrogen Status</th>      <th>Progesterone Status</th>      <th>intercept</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>-1.253506</td>      <td>1.190528</td>      <td>-0.618095</td>      <td>-0.492900</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>2</td>      <td>2</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>1.0</td>    </tr>    <tr>      <th>1</th>      <td>0.214319</td>      <td>-0.044089</td>      <td>0.164786</td>      <td>-0.405645</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>2</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>1.0</td>    </tr>    <tr>      <th>2</th>      <td>1.540095</td>      <td>-0.044089</td>      <td>0.556227</td>      <td>0.161510</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>2</td>      <td>2</td>      <td>4</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>1.0</td>    </tr>    <tr>      <th>3</th>      <td>-0.590617</td>      <td>-1.525630</td>      <td>-0.618095</td>      <td>0.554156</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>2</td>      <td>2</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>1.0</td>    </tr>    <tr>      <th>4</th>      <td>0.498414</td>      <td>-1.402168</td>      <td>-0.618095</td>      <td>-0.929173</td>      <td>0</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>1</td>      <td>0</td>      <td>1</td>      <td>2</td>      <td>2</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>1.0</td>    </tr>  </tbody></table><p>5 rows × 22 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## 划分训练数据和测试数据</span><br>x_train, y_train = X.iloc[:<span class="hljs-number">3001</span>, :], data.iloc[:<span class="hljs-number">3001</span>, -<span class="hljs-number">1</span>]<br>x_test,  y_test  = X.iloc[<span class="hljs-number">3001</span>:, :], data.iloc[<span class="hljs-number">3001</span>:, -<span class="hljs-number">1</span>]<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">X.columns<br></code></pre></td></tr></table></figure><pre><code class="hljs">Index(['Tumor Size', 'Regional Node Examined', 'Regional Node Positive',       'Survival Months', 'Age_elderly', 'Age_middle aged', 'Age_thirties',       'Race_Black', 'Race_Other', 'Race_White', 'Marital Status_Married',       'Marital Status_Other', 'Marital Status_Single ', 'T Stage', 'N Stage',       '6th Stage', 'differentiate', 'Grade', 'A Stage', 'Estrogen Status',       'Progesterone Status', 'intercept'],      dtype='object')</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">cols = [<span class="hljs-string">&#x27;Regional Node Positive&#x27;</span>,<br>       <span class="hljs-string">&#x27;Race_Other&#x27;</span>,<br>       <span class="hljs-string">&#x27;Marital Status_Other&#x27;</span>, <span class="hljs-string">&#x27;T Stage&#x27;</span>, <span class="hljs-string">&#x27;N Stage&#x27;</span>,<br>       <span class="hljs-string">&#x27;Grade&#x27;</span>, <span class="hljs-string">&#x27;Estrogen Status&#x27;</span>,<br>       <span class="hljs-string">&#x27;Progesterone Status&#x27;</span>, <span class="hljs-string">&#x27;intercept&#x27;</span>]<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> statsmodels.api <span class="hljs-keyword">as</span> sm<br><span class="hljs-keyword">import</span> statsmodels.formula.api <span class="hljs-keyword">as</span> smf<br><br>model = sm.Logit(y_train, x_train[cols]).fit()<br>model.summary()    <span class="hljs-comment">## Logit分析结果</span><br></code></pre></td></tr></table></figure><pre><code class="hljs">Optimization terminated successfully.         Current function value: 0.376407         Iterations 6</code></pre><table class="simpletable"><caption>Logit Regression Results</caption><tr>  <th>Dep. Variable:</th>        <td>Status</td>      <th>  No. Observations:  </th>  <td>  3001</td>  </tr><tr>  <th>Model:</th>                 <td>Logit</td>      <th>  Df Residuals:      </th>  <td>  2992</td>  </tr><tr>  <th>Method:</th>                 <td>MLE</td>       <th>  Df Model:          </th>  <td>     8</td>  </tr><tr>  <th>Date:</th>            <td>Tue, 15 Nov 2022</td> <th>  Pseudo R-squ.:     </th>  <td>0.1316</td>  </tr><tr>  <th>Time:</th>                <td>20:11:51</td>     <th>  Log-Likelihood:    </th> <td> -1129.6</td> </tr><tr>  <th>converged:</th>             <td>True</td>       <th>  LL-Null:           </th> <td> -1300.8</td> </tr><tr>  <th>Covariance Type:</th>     <td>nonrobust</td>    <th>  LLR p-value:       </th> <td>3.829e-69</td></tr></table><table class="simpletable"><tr>             <td></td>               <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  </tr><tr>  <th>Regional Node Positive</th> <td>    0.2389</td> <td>    0.076</td> <td>    3.152</td> <td> 0.002</td> <td>    0.090</td> <td>    0.387</td></tr><tr>  <th>Race_Other</th>             <td>   -0.5105</td> <td>    0.230</td> <td>   -2.223</td> <td> 0.026</td> <td>   -0.961</td> <td>   -0.060</td></tr><tr>  <th>Marital Status_Other</th>   <td>    0.2924</td> <td>    0.130</td> <td>    2.254</td> <td> 0.024</td> <td>    0.038</td> <td>    0.547</td></tr><tr>  <th>T Stage</th>                <td>    0.3337</td> <td>    0.068</td> <td>    4.897</td> <td> 0.000</td> <td>    0.200</td> <td>    0.467</td></tr><tr>  <th>N Stage</th>                <td>    0.4330</td> <td>    0.120</td> <td>    3.621</td> <td> 0.000</td> <td>    0.199</td> <td>    0.667</td></tr><tr>  <th>Grade</th>                  <td>    0.3430</td> <td>    0.089</td> <td>    3.848</td> <td> 0.000</td> <td>    0.168</td> <td>    0.518</td></tr><tr>  <th>Estrogen Status</th>        <td>   -0.7753</td> <td>    0.201</td> <td>   -3.864</td> <td> 0.000</td> <td>   -1.169</td> <td>   -0.382</td></tr><tr>  <th>Progesterone Status</th>    <td>   -0.5380</td> <td>    0.148</td> <td>   -3.645</td> <td> 0.000</td> <td>   -0.827</td> <td>   -0.249</td></tr><tr>  <th>intercept</th>              <td>   -1.6248</td> <td>    0.230</td> <td>   -7.073</td> <td> 0.000</td> <td>   -2.075</td> <td>   -1.175</td></tr></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## OR值 和 95%置信区间</span><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br>params = np.exp(model.params)<br>conf = np.exp(model.conf_int())<br>conf[<span class="hljs-string">&#x27;OR&#x27;</span>] = params<br>conf.columns = [<span class="hljs-string">&#x27;2.5%&#x27;</span>,<span class="hljs-string">&#x27;97.5%&#x27;</span>,<span class="hljs-string">&#x27;OR&#x27;</span>]<br>conf<br></code></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code class="hljs">.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>2.5%</th>      <th>97.5%</th>      <th>OR</th>    </tr>  </thead>  <tbody>    <tr>      <th>Regional Node Positive</th>      <td>1.094541</td>      <td>1.473103</td>      <td>1.269792</td>    </tr>    <tr>      <th>Race_Other</th>      <td>0.382678</td>      <td>0.941337</td>      <td>0.600191</td>    </tr>    <tr>      <th>Marital Status_Other</th>      <td>1.038909</td>      <td>1.727506</td>      <td>1.339672</td>    </tr>    <tr>      <th>T Stage</th>      <td>1.221613</td>      <td>1.595665</td>      <td>1.396168</td>    </tr>    <tr>      <th>N Stage</th>      <td>1.219773</td>      <td>1.949118</td>      <td>1.541908</td>    </tr>    <tr>      <th>Grade</th>      <td>1.183231</td>      <td>1.678086</td>      <td>1.409100</td>    </tr>    <tr>      <th>Estrogen Status</th>      <td>0.310819</td>      <td>0.682437</td>      <td>0.460559</td>    </tr>    <tr>      <th>Progesterone Status</th>      <td>0.437239</td>      <td>0.779826</td>      <td>0.583927</td>    </tr>    <tr>      <th>intercept</th>      <td>0.125550</td>      <td>0.308954</td>      <td>0.196950</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">fig, ax = plt.subplots(figsize=(<span class="hljs-number">6</span>,<span class="hljs-number">5</span>))<br>plt.barh(conf.index,conf[<span class="hljs-string">&#x27;OR&#x27;</span>].values, <span class="hljs-number">0.25</span>, color=<span class="hljs-string">&#x27;orange&#x27;</span>)<br>plt.axvline(<span class="hljs-number">1</span>, linestyle=<span class="hljs-string">&#x27;--&#x27;</span>,color=<span class="hljs-string">&#x27;red&#x27;</span>,linewidth=<span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><pre><code class="hljs">&lt;matplotlib.lines.Line2D at 0x19f6c0b26b0&gt;</code></pre><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_77_1.png" alt="png" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sklearn.metrics <span class="hljs-keyword">import</span> roc_curve, auc<br><br><span class="hljs-comment">## 测试集分类预测</span><br>resu = model.predict(x_test[cols])<br>fpr, tpr, threshold = roc_curve(y_test, resu)<br><br><span class="hljs-comment">##计算ROC，并绘制曲线</span><br>rocauc = auc(fpr, tpr)<br>plt.plot(fpr, tpr, <span class="hljs-string">&#x27;r&#x27;</span>, label=<span class="hljs-string">&#x27;AUC = %0.2f&#x27;</span> % rocauc)<br>plt.plot([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>], color=<span class="hljs-string">&#x27;grey&#x27;</span>,linestyle=<span class="hljs-string">&#x27;--&#x27;</span>)<br>plt.xlim([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>])<br>plt.ylim([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>])<br>plt.ylabel(<span class="hljs-string">&#x27;True rate&#x27;</span>)<br>plt.xlabel(<span class="hljs-string">&#x27;False rate&#x27;</span>)<br>plt.legend(loc=<span class="hljs-string">&#x27;lower right&#x27;</span>)<br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/output_78_0.png" alt="png" /></p>]]></content>
    
    
    <categories>
      
      <category>数据分析</category>
      
      <category>编程语言</category>
      
      <category>Python</category>
      
      <category>Logit回归</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Logit回归</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown常用语法</title>
    <link href="/2022/11/15/markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
    <url>/2022/11/15/markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>本文整理了常用 Markdown 语法元素。如果你想了解语法元素的更多信息，请参阅更详细的 <a href="https://markdown.com.cn/basic-syntax/">基本语法</a> 和 <a href="https://markdown.com.cn/extended-syntax/">扩展语法</a>。</p><span id="more"></span><h3 id="标题（Heading）">标题（Heading）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Markdown"><span class="hljs-section"># H1</span><br><span class="hljs-section">## H2</span><br><span class="hljs-section">### H3</span><br></code></pre></td></tr></table></figure><h3 id="粗体（Bold）与-斜体（Italic）">粗体（Bold）与 斜体（Italic）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Markdown"><span class="hljs-strong">**粗体**</span><br><span class="hljs-emphasis">*斜体*</span><br><span class="hljs-strong">**<span class="hljs-emphasis">*斜体加粗*</span>**</span><br></code></pre></td></tr></table></figure><p><strong>粗体</strong><br><em>斜体</em><br><em><strong>斜体加粗</strong></em></p><h3 id="删除线（Strikethtough）">删除线（Strikethtough）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Markdown">~~这是一条删除线~~<br></code></pre></td></tr></table></figure><p><s>这是一条删除线</s></p><h3 id="引用块（Blockquote）">引用块（Blockquote）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Markdown"><span class="hljs-quote">&gt; 引用块</span><br></code></pre></td></tr></table></figure><blockquote><p>引用块</p></blockquote><h3 id="链接（Link）">链接（Link）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Markdown">[<span class="hljs-string">B站</span>](<span class="hljs-link">https://www.bilibili.com/</span>)<br></code></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/">B站</a></p><h3 id="图片（Image）">图片（Image）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Markdown">![<span class="hljs-string">road</span>](<span class="hljs-link">/img/road.jpg</span>)<br></code></pre></td></tr></table></figure><p><img src="/img/road.jpg" alt="road"></p><h3 id="脚注（Footnote）">脚注（Footnote）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Markdown">Markdown 是一种轻量级的标记语言，可用于在纯文本文档中添加格式化元素。 [^1]<br>[<span class="hljs-symbol">^1</span>]: <span class="hljs-link">Markdown官方教程https://markdown.com.cn/intro.html</span><br></code></pre></td></tr></table></figure><p>Markdown 是一种轻量级的标记语言，可用于在纯文本文档中添加格式化元素。 [^1]<br>[^1]: Markdown官方教程https://markdown.com.cn/intro.html</p><h3 id="分隔线（Horizontal-Rule）">分隔线（Horizontal Rule）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Markdown">---<br></code></pre></td></tr></table></figure><hr><h3 id="代码（code）">代码（code）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Markdown"><span class="hljs-code">`code`</span><br></code></pre></td></tr></table></figure><p><code>code</code></p><h3 id="代码块（Fenced-Code-Block）">代码块（Fenced Code Block）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs Markdown"><span class="hljs-code">```python</span><br><span class="hljs-code">class Solution:</span><br><span class="hljs-code">    def twoSum(self, nums, target):</span><br><span class="hljs-code">        n = len(nums)</span><br><span class="hljs-code">        for i in range(n):</span><br><span class="hljs-code">            for j in range(i + 1, n):</span><br><span class="hljs-code">                if nums[i] + nums[j] == target:</span><br><span class="hljs-code">                    return [i, j]</span><br><span class="hljs-code">        return []</span><br><span class="hljs-code">```</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">twoSum</span>(<span class="hljs-params">self, nums, target</span>):<br>        n = <span class="hljs-built_in">len</span>(nums)<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i + <span class="hljs-number">1</span>, n):<br>                <span class="hljs-keyword">if</span> nums[i] + nums[j] == target:<br>                    <span class="hljs-keyword">return</span> [i, j]<br>        <span class="hljs-keyword">return</span> []<br></code></pre></td></tr></table></figure><h3 id="表格（Table）">表格（Table）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Markdown">| Syntax      | Description |<br>| ----------- | ----------- |<br>| Header      | Title       |<br>| Paragraph   | Text        |<br></code></pre></td></tr></table></figure><table><thead><tr><th>Syntax</th><th>Description</th></tr></thead><tbody><tr><td>Header</td><td>Title</td></tr><tr><td>Paragraph</td><td>Text</td></tr></tbody></table><h3 id="有序列表（Ordered-List）">有序列表（Ordered List）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Markdown"><span class="hljs-bullet">1.</span> 事项一<br><span class="hljs-bullet">2.</span> 事项二<br><span class="hljs-bullet">3.</span> 事项三<br></code></pre></td></tr></table></figure><ol><li>事项一</li><li>事项二</li><li>事项三</li></ol><h3 id="无序列表（Unordered-List）">无序列表（Unordered List）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Markdown"><span class="hljs-bullet">-</span> 事项一<br><span class="hljs-bullet">-</span> 事项二<br><span class="hljs-bullet">-</span> 事项三<br></code></pre></td></tr></table></figure><ul><li>事项一</li><li>事项二</li><li>事项三</li></ul><h3 id="定义列表（Definition-List）">定义列表（Definition List）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Markdown">名词<br>: 这是该名词的定义<br></code></pre></td></tr></table></figure><p>名词<br>: 这是该名词的定义</p>]]></content>
    
    
    <categories>
      
      <category>Tips</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
